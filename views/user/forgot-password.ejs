<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MyLuxe.com - Password Reset Flow</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .form-container {
            max-width: 500px;
            margin: 50px auto;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            background: #fff;
        }

       
        .form-section {
            display: none;
        }

    
        .form-section.active {
            display: block;
        }

        
        .form-header {
            border-bottom: 1px solid #eee;
            padding-bottom: 15px;
            margin-bottom: 20px;
        }

        .form-title {
            font-weight: bold;
            font-size: 24px;
            margin: 0;
        }

       
        .form-label {
            font-weight: 500;
            margin-bottom: 10px;
        }

        .form-control {
            padding: 12px;
            height: auto;
            border: 1px solid #ccc;
            font-size: 16px;
        }

        .btn {
            padding: 12px;
            font-size: 16px;
            width: 100%;
        }

        .btn-primary {
            background-color: #000;
            border-color: #000;
        }

        .btn-primary:hover {
            background-color: #333;
            border-color: #333;
        }

        .error-message {
            color: #ff0000;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }

        .error-message.active {
            display: block;
        }

        .resend-container {
            text-align: center;
            margin-bottom: 15px;
        }

        .resend {
            color: #666;
            font-size: 14px;
        }

        .resend a {
            color: #007bff;
            text-decoration: none;
            font-weight: 500;
        }

        .resend a:hover {
            text-decoration: underline;
        }

        .account-text {
            text-align: center;
            margin-top: 15px;
            font-size: 14px;
        }

        .create-account {
            color: #000;
            text-decoration: none;
            font-weight: 500;
        }

        .animated {
            animation-duration: 0.5s;
            animation-fill-mode: both;
        }

        .fadeInDown {
            animation-name: fadeInDown;
        }

        @keyframes fadeInDown {
            from {
                opacity: 0;
                transform: translate3d(0, -20px, 0);
            }
            to {
                opacity: 1;
                transform: translate3d(0, 0, 0);
            }
        }
    </style>
</head>
<body>
    <!-- Forgot Password Form -->
    <div id="forgotPasswordForm" class="form-section form-container active">
        <div class="form-header">
            <h5 class="form-title">Change your password</h5>
        </div>
        <div class="form-body">
            <p>Please enter your email address to receive an OTP to reset your password.</p>
            <form id="forgot-password-form" onsubmit="return validateEmail(event)">
                <div class="mb-3">
                    <label for="email" class="form-label">Email*</label>
                    <input type="email" class="form-control" id="email" name="email" required>
                    <div class="error-message" id="email-error">Please enter a valid email address.</div>
                </div>
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary">SEND</button>
                </div>
            </form>
            <div class="account-text text-center mt-3">
                Don't have a MyLuxe.com account? <a href="/signup" class="create-account">Create an Account</a>
            </div>
        </div>
    </div>

    <!-- OTP Verification Form -->
    <div id="otpVerificationForm" class="form-section form-container">
        <div class="form-header">
            <h5 class="form-title">Verification</h5>
        </div>
        <div class="form-body">
            <p>Enter OTP received in your email</p>
            <form id="otp-form" onsubmit="return otpValidateForm(event)">
                <div class="mb-3">
                    <label for="otp" class="form-label">OTP</label>
                    <input type="text" class="form-control" id="otp" name="otp" required>
                    <div class="error-message" id="otp-error">Please enter a valid OTP.</div>
                </div>
                <div class="resend-container mb-3">
                    <span class="resend">Resend OTP <span id="timer">in 2:00</span></span>
                </div>
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary">VERIFY</button>
                </div>
            </form>
            <div class="account-text text-center mt-3">
                Don't have a MyLuxe.com account? <a href="/signup" class="create-account">Create an Account</a>
            </div>
        </div>
    </div>

    <!-- Reset Password Form -->
    <div id="resetPasswordForm" class="form-section form-container">
        <div class="form-header">
            <h5 class="form-title">Your New Password</h5>
        </div>
        <div class="form-body">
            <p>Please create a new password</p>
            <form id="reset-password-form" onsubmit="return validatePassword(event)">
                <div class="mb-3">
                    <label for="new-password" class="form-label">New password</label>
                    <input type="password" class="form-control" id="new-password" name="newPassword" required>
                    <div class="error-message" id="new-password-error">Password must be at least 6 characters.</div>
                </div>
                <div class="mb-3">
                    <label for="confirm-password" class="form-label">Confirm your password</label>
                    <input type="password" class="form-control" id="confirm-password" name="confirmPassword" required>
                    <div class="error-message" id="confirm-password-error">Passwords do not match.</div>
                </div>
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary">SUBMIT</button>
                </div>
            </form>
            <div class="account-text text-center mt-3">
                Don't have a MyLuxe.com account? <a href="/signup" class="create-account">Create an Account</a>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        
        // Email validation for forgot password
        function validateEmail(event) {
            event.preventDefault();
            const email = document.getElementById('email').value;
            const emailError = document.getElementById('email-error');
            const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;

            if (!email) {
                emailError.textContent = 'Please enter your email.';
                emailError.classList.add('active');
                return false;
            } else if (!email.match(emailPattern)) {
                emailError.textContent = 'Please enter a valid email address.';
                emailError.classList.add('active');
                return false;
            }

            emailError.classList.remove('active');

            $.ajax({
                type: 'POST',
                url: '/forgot-email-validatid',
                data: JSON.stringify({ email: email }),
                contentType: 'application/json',
                dataType: 'json',
                xhrFields: {
                withCredentials: true
                },
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            title: 'Success!',
                            text: response.message || 'An OTP has been sent to your email.',
                            icon: 'success',
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#3085d6',
                            customClass: { popup: 'animated fadeInDown' }
                        }).then((result) => {
                            if (result.isConfirmed) {
                                document.getElementById('forgotPasswordForm').classList.remove('active');
                                document.getElementById('otpVerificationForm').classList.add('active');
                                startTimer();
                            }
                        });
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: response.message || 'User with this email does not exist.',
                            icon: 'error',
                            confirmButtonText: 'Try Again',
                            confirmButtonColor: '#d33',
                            customClass: { popup: 'animated fadeInDown' }
                        });
                    }
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Server Error',
                        text: 'An error occurred. Please try again later.'
                    });
                }
            });
            return false;
        }

        // OTP validation
        function otpValidateForm(event) {
            event.preventDefault();
            const otpInput = document.getElementById('otp').value;
            const otpError = document.getElementById('otp-error');

            if (!otpInput) {
                otpError.textContent = 'Please enter the OTP.';
                otpError.classList.add('active');
                return false;
            }

            otpError.classList.remove('active');

            console.log('Sending OTP data:', { otp: otpInput });

            $.ajax({
                type: 'POST',
                url: '/verifyOtp',
                data: JSON.stringify({ otp: otpInput }),
                contentType: 'application/json', 
                dataType: 'json',
                xhrFields: {
                withCredentials: true
                },
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            title: 'Success!',
                            text: response.message || 'OTP verified successfully.',
                            icon: 'success',
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#3085d6',
                            customClass: { popup: 'animated fadeInDown' }
                        }).then((result) => {
                            if (result.isConfirmed) {
                                document.getElementById('otpVerificationForm').classList.remove('active');
                                document.getElementById('resetPasswordForm').classList.add('active');
                            }
                        });
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: response.message || 'Invalid OTP. Please try again.',
                            icon: 'error',
                            confirmButtonText: 'Try Again',
                            confirmButtonColor: '#d33',
                            customClass: { popup: 'animated fadeInDown' }
                        });
                    }
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Server Error',
                        text: 'An error occurred. Please try again later.'
                    });
                }
            });
            return false;
        }

       // Password reset validation
       function validatePassword(event) {
            event.preventDefault();
            const newPassword = document.getElementById('new-password').value;
            const confirmPassword = document.getElementById('confirm-password').value;
            const newPasswordError = document.getElementById('new-password-error');
            const confirmPasswordError = document.getElementById('confirm-password-error');
            let valid = true;

            if (!newPassword) {
                newPasswordError.textContent = 'Password cannot be empty.';
                newPasswordError.classList.add('active');
                valid = false;
            } else if (newPassword.length < 6) {
                newPasswordError.textContent = 'Password must be at least 6 characters.';
                newPasswordError.classList.add('active');
                valid = false;
            } else {
                newPasswordError.classList.remove('active');
            }

            if (!confirmPassword) {
                confirmPasswordError.textContent = 'Please confirm your password.';
                confirmPasswordError.classList.add('active');
                valid = false;
            } else if (confirmPassword !== newPassword) {
                confirmPasswordError.textContent = 'Passwords do not match.';
                confirmPasswordError.classList.add('active');
                valid = false;
            } else {
                confirmPasswordError.classList.remove('active');
            }

            if (valid) {
                $.ajax({
                    type: 'POST',
                    url: '/reset-password',
                    data: JSON.stringify({ newPassword, confirmPassword }),
                    contentType: 'application/json',
                    dataType: 'json',
                    xhrFields: {
                        withCredentials: true
                    },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: 'Success!',
                                text: response.message || 'Password reset successfully.',
                                icon: 'success',
                                confirmButtonText: 'Login Now',
                                confirmButtonColor: '#3085d6',
                                customClass: { popup: 'animated fadeInDown' }
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = '/login';
                                }
                            });
                        } else {
                            Swal.fire({
                                title: 'Error!',
                                text: response.message || 'Failed to reset password.',
                                icon: 'error',
                                confirmButtonText: 'Try Again',
                                confirmButtonColor: '#d33',
                                customClass: { popup: 'animated fadeInDown' }
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Server Error',
                            text: 'An error occurred. Please try again later.'
                        });
                    }
                });
            }
            return false;
        }

        // OTP resend timer , functionality
        let timeLeft = 120;
        let timer;

        function startTimer() {
            const timerElement = document.getElementById('timer');
            const resendText = document.querySelector('.resend');

            clearInterval(timer);
            timeLeft = 120;

            timer = setInterval(() => {
                if (timeLeft <= 0) {
                    clearInterval(timer);
                    timerElement.textContent = '';
                    resendText.innerHTML = 'Resend OTP <a href="#" onclick="resendOtp(event)">now</a>';
                    return;
                }

                const minutes = Math.floor(timeLeft / 60);
                const seconds = timeLeft % 60;
                timerElement.textContent = `in ${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
                timeLeft--;
            }, 1000);
        }

        function resendOtp(event) {
            event.preventDefault();

            $.ajax({
                type: 'POST',
                url: '/resend-otp',
                data: JSON.stringify({}),
                contentType: 'application/json',
                dataType: 'json',
                xhrFields: {
                withCredentials: true
                },
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            title: 'Success!',
                            text: response.message || 'A new OTP has been sent to your email.',
                            icon: 'success',
                            confirmButtonText: 'OK',
                            confirmButtonColor: '#3085d6',
                            customClass: { popup: 'animated fadeInDown' }
                        }).then(() => {
                            document.querySelector('.resend').innerHTML = 'Resend OTP <span id="timer">in 2:00</span>';
                            startTimer();
                        });
                    } else {
                        Swal.fire({
                            title: 'Error!',
                            text: response.message || 'Failed to resend OTP.',
                            icon: 'error',
                            confirmButtonText: 'Try Again',
                            confirmButtonColor: '#d33',
                            customClass: { popup: 'animated fadeInDown' }
                        });
                    }
                },
                error: function (xhr, status, error) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Server Error',
                        text: 'An error occurred. Please try again later.'
                    });
                }
            });
        }

        document.getElementById('otpVerificationForm').addEventListener('transitionend', function () {
            if (this.classList.contains('active')) {
                startTimer();
            }
        });
    </script>
</body>
</html>