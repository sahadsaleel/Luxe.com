<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MyLuxe.com - Password Reset</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <link rel="stylesheet" href="/css/forgot-password.css">
</head>
<body>
    <!-- Email Form -->
    <div id="forgotPasswordForm" class="form-container active">
        <div class="text-center">
            <img src="/img/logo.png" alt="MyLuxe.com Logo" class="logo-img">
            <div class="progress-steps">
                <div class="step active">1</div>
                <div class="step">2</div>
                <div class="step">3</div>
            </div>
            <h1>Reset Your Password</h1>
        </div>
        <form id="forgot-password-form" onsubmit="return validateEmail(event)">
            <label for="email" class="form-label">Email Address</label>
            <input type="email" class="form-control" id="email" name="email" placeholder="Enter your email" required>
            <div class="error-message" id="email-error"></div>
            <button type="submit" class="btn-primary">
                <span class="button-text">Send OTP</span>
                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
            </button>
            <div class="back-to-login">
                <a href="/login">Back to Login</a>
            </div>
        </form>
    </div>

    <!-- OTP Verification Form -->
    <div id="otpVerificationForm" class="form-container">
        <div class="text-center">
            <img src="/img/logo.png" alt="MyLuxe.com Logo" class="logo-img">
            <div class="progress-steps">
                <div class="step completed">1</div>
                <div class="step active">2</div>
                <div class="step">3</div>
            </div>
            <h1>Verify OTP</h1>
        </div>
        <form id="otp-form" onsubmit="return verifyOtp(event)">
            <label for="otp" class="form-label">Enter OTP</label>
            <input type="text" class="form-control" id="otp" name="otp" maxlength="6" placeholder="Enter 6-digit OTP" required>
            <div class="error-message" id="otp-error"></div>
            <div class="resend-container">
                <span class="resend">Resend OTP <span class="timer-text">in 1:00</span></span>
            </div>
            <button type="submit" class="btn-primary">
                <span class="button-text">Verify OTP</span>
                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
            </button>
        </form>
    </div>

    <!-- Reset Password Form -->
    <div id="resetPasswordForm" class="form-container">
        <div class="text-center">
            <img src="/img/logo.png" alt="MyLuxe.com Logo" class="logo-img">
            <div class="progress-steps">
                <div class="step completed">1</div>
                <div class="step completed">2</div>
                <div class="step active">3</div>
            </div>
            <h1>Create New Password</h1>
        </div>
        <form id="reset-password-form" onsubmit="return resetPassword(event)">
            <label for="new-password" class="form-label">New Password</label>
            <input type="password" class="form-control" id="new-password" name="newPassword" required>
            <div class="password-requirements">
                <div class="requirement" data-requirement="length">
                    <i class="fas fa-circle"></i> At least 8 characters
                </div>
                <div class="requirement" data-requirement="uppercase">
                    <i class="fas fa-circle"></i> One uppercase letter
                </div>
                <div class="requirement" data-requirement="lowercase">
                    <i class="fas fa-circle"></i> One lowercase letter
                </div>
                <div class="requirement" data-requirement="number">
                    <i class="fas fa-circle"></i> One number
                </div>
            </div>
            <div class="error-message" id="new-password-error"></div>
            
            <label for="confirm-password" class="form-label">Confirm Password</label>
            <input type="password" class="form-control" id="confirm-password" name="confirmPassword" required>
            <div class="error-message" id="confirm-password-error"></div>
            
            <button type="submit" class="btn-primary">
                <span class="button-text">Reset Password</span>
                <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
            </button>
        </form>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script>
        let timeLeft = 60;
        let timer;

        function showToast(message, type = 'success') {
            Toastify({
                text: message,
                duration: 3000,
                gravity: "top",
                position: "right",
                backgroundColor: type === 'success' ? "#2ecc71" : "#e74c3c",
                stopOnFocus: true,
            }).showToast();
        }

        function startTimer() {
            const timerElement = document.querySelector('.timer-text');
            const resendText = document.querySelector('.resend');
            
            clearInterval(timer);
            timeLeft = 60;
            
            function updateTimer() {
                const minutes = Math.floor(timeLeft / 60);
                const seconds = timeLeft % 60;
                timerElement.textContent = `in ${minutes}:${seconds.toString().padStart(2, '0')}`;
                
                if (timeLeft <= 0) {
                    clearInterval(timer);
                    resendText.innerHTML = `<a href="#" onclick="resendOtp(event)">Resend OTP</a>`;
                    return;
                }
                timeLeft--;
            }
            
            updateTimer();
            timer = setInterval(updateTimer, 1000);
        }

        function toggleLoadingState(form, isLoading) {
            const button = form.querySelector('button[type="submit"]');
            const buttonText = button.querySelector('.button-text');
            const spinner = button.querySelector('.spinner-border');
            
            button.disabled = isLoading;
            buttonText.style.display = isLoading ? 'none' : 'inline';
            spinner.classList.toggle('d-none', !isLoading);
        }

        function validatePasswordRequirements(password) {
            const requirements = {
                length: password.length >= 8,
                uppercase: /[A-Z]/.test(password),
                lowercase: /[a-z]/.test(password),
                number: /\d/.test(password)
            };

            Object.entries(requirements).forEach(([key, valid]) => {
                const requirement = document.querySelector(`[data-requirement="${key}"]`);
                requirement.classList.toggle('valid', valid);
                requirement.classList.toggle('invalid', !valid);
                const icon = requirement.querySelector('i');
                icon.className = valid ? 'fas fa-check-circle' : 'fas fa-circle';
            });

            return Object.values(requirements).every(Boolean);
        }

        document.getElementById('new-password').addEventListener('input', function() {
            validatePasswordRequirements(this.value);
        });

        async function validateEmail(event) {
            event.preventDefault();
            const form = event.target;
            const email = document.getElementById('email').value;
            const emailError = document.getElementById('email-error');
            
            emailError.classList.remove('active');
            toggleLoadingState(form, true);

            try {
                const response = await fetch('/forgot-email-validation', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email })
                });

                const data = await response.json();

                if (data.success) {
                    localStorage.setItem('resetEmail', email);
                    showToast(data.message);
                    document.getElementById('forgotPasswordForm').classList.remove('active');
                    document.getElementById('otpVerificationForm').classList.add('active');
                    startTimer();
                } else {
                    emailError.textContent = data.message;
                    emailError.classList.add('active');
                }
            } catch (error) {
                emailError.textContent = 'An error occurred. Please try again.';
                emailError.classList.add('active');
            } finally {
                toggleLoadingState(form, false);
            }
        }

        async function verifyOtp(event) {
            event.preventDefault();
            const form = event.target;
            const otp = document.getElementById('otp').value;
            const email = localStorage.getItem('resetEmail');
            const otpError = document.getElementById('otp-error');

            otpError.classList.remove('active');
            toggleLoadingState(form, true);

            try {
                const response = await fetch('/verifyProfileOtp', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ otp, email })
                });

                const data = await response.json();

                if (data.success) {
                    showToast(data.message);
                    document.getElementById('otpVerificationForm').classList.remove('active');
                    document.getElementById('resetPasswordForm').classList.add('active');
                } else {
                    otpError.textContent = data.message;
                    otpError.classList.add('active');
                }
            } catch (error) {
                otpError.textContent = 'An error occurred. Please try again.';
                otpError.classList.add('active');
            } finally {
                toggleLoadingState(form, false);
            }
        }

        async function resetPassword(event) {
            event.preventDefault();
            const form = event.target;
            const newPassword = document.getElementById('new-password').value;
            const confirmPassword = document.getElementById('confirm-password').value;
            const email = localStorage.getItem('resetEmail');

            const newPasswordError = document.getElementById('new-password-error');
            const confirmPasswordError = document.getElementById('confirm-password-error');

            newPasswordError.classList.remove('active');
            confirmPasswordError.classList.remove('active');
            toggleLoadingState(form, true);

            if (!validatePasswordRequirements(newPassword)) {
                newPasswordError.textContent = 'Please meet all password requirements';
                newPasswordError.classList.add('active');
                toggleLoadingState(form, false);
                return;
            }

            if (newPassword !== confirmPassword) {
                confirmPasswordError.textContent = 'Passwords do not match';
                confirmPasswordError.classList.add('active');
                toggleLoadingState(form, false);
                return;
            }

            try {
                const response = await fetch('/reset-password', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ newPassword, confirmPassword, email })
                });

                const data = await response.json();

                if (data.success) {
                    showToast(data.message);
                    localStorage.removeItem('resetEmail');
                    setTimeout(() => window.location.href = '/login', 1500);
                } else {
                    newPasswordError.textContent = data.message;
                    newPasswordError.classList.add('active');
                }
            } catch (error) {
                newPasswordError.textContent = 'An error occurred. Please try again.';
                newPasswordError.classList.add('active');
            } finally {
                toggleLoadingState(form, false);
            }
        }

        async function resendOtp(event) {
            event.preventDefault();
            const email = localStorage.getItem('resetEmail');
            
            if (!email) {
                showToast('Session expired. Please start over.', 'error');
                setTimeout(() => window.location.reload(), 1500);
                return;
            }

            try {
                const response = await fetch('/resend-reset-otp', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email })
                });

                const data = await response.json();

                if (data.success) {
                    showToast(data.message);
                    startTimer();
                } else {
                    showToast(data.message, 'error');
                }
            } catch (error) {
                showToast('An error occurred while resending OTP', 'error');
            }
        }

        // Initialize timer if on OTP verification step
        if (document.getElementById('otpVerificationForm').classList.contains('active')) {
            startTimer();
        }

        // Prevent form submission on enter key for OTP input
        document.getElementById('otp').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                if (this.value.length === 6) {
                    document.getElementById('otp-form').requestSubmit();
                }
            }
        });

        // Auto-focus next input in OTP field
        document.getElementById('otp').addEventListener('input', function() {
            this.value = this.value.replace(/[^0-9]/g, '').slice(0, 6);
        });
    </script>
</body>
</html>