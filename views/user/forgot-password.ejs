<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MyLuxe.com - Password Reset Flow</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">    
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <link rel="stylesheet" href="/css/forgot-password.css">
</head>
<body>
    <div id="forgotPasswordForm" class="form-section form-container active">
        <div class="form-header">
            <img src="/img/logo.png" alt="luxe.com Logo" class="logo-img">
            <h5 class="form-title">Change your password</h5>
        </div>
        <div class="form-body">
            <p>Please enter your email address to receive an OTP to reset your password.</p>
            <form id="forgot-password-form" onsubmit="return validateEmail(event)">
                <div class="mb-3">
                    <label for="email" class="form-label">Email*</label>
                    <input type="email" class="form-control" id="email" name="email" required>
                    <div class="error-message" id="email-error">Please enter a valid email address.</div>
                </div>
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary">SEND</button>
                </div>
            </form>
            <div class="account-text text-center mt-3">
                Don't have a MyLuxe.com account? <a href="/signup" class="create-account">Create an Account</a>
            </div>
        </div>
    </div>

    <div id="otpVerificationForm" class="form-section form-container">
        <div class="form-header">
            <img src="/img/logo.png" alt="luxe.com Logo" class="logo-img">
            <h5 class="form-title">Forgot Password</h5>
        </div>
        <div class="form-body">
            <p>Enter OTP received in your email</p>
            <form id="otp-form" onsubmit="return otpValidateForm(event)">
                <div class="mb-3">
                    <label for="otp" class="form-label">OTP</label>
                    <input type="text" class="form-control" id="otp" name="otp" required>
                    <div class="error-message" id="otp-error">Please enter a valid OTP.</div>
                </div>
                <div class="resend-container mb-3">
                    <span class="resend">Resend OTP <span class="timer-text">in 1:00</span></span>
                </div>
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary">VERIFY</button>
                </div>
            </form>
            <div class="account-text text-center mt-3">
                Don't have a MyLuxe.com account? <a href="/signup" class="create-account">Create an Account</a>
            </div>
        </div>
    </div>

    <div id="resetPasswordForm" class="form-section form-container">
        <div class="form-header">
            <img src="/img/logo.png" alt="luxe.com Logo" class="logo-img">
            <h5 class="form-title">Your New Password</h5>
        </div>
        <div class="form-body">
            <p>Please create a new password</p>
            <form id="reset-password-form" onsubmit="return validatePassword(event)">
                <div class="mb-3">
                    <label for="new-password" class="form-label">New password</label>
                    <input type="password" class="form-control" id="new-password" name="newPassword" required>
                    <div class="error-message" id="new-password-error">Password must be at least 8 characters.</div>
                </div>
                <div class="mb-3">
                    <label for="confirm-password" class="form-label">Confirm your password</label>
                    <input type="password" class="form-control" id="confirm-password" name="confirmPassword" required>
                    <div class="error-message" id="confirm-password-error">Passwords do not match.</div>
                </div>
                <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary">SUBMIT</button>
                </div>
            </form>
            <div class="account-text text-center mt-3">
                Don't have a MyLuxe.com account? <a href="/signup" class="create-account">Create an Account</a>
            </div>
        </div>
    </div>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script>
    let timeLeft = 60;
    let timer;

    function showToast(message, type = 'success') {
        Toastify({
            text: message,
            duration: 3000,
            close: true,
            gravity: "top",
            position: "right",
            backgroundColor: type === 'success' ? "#28a745" : "#dc3545",
        }).showToast();
    }

    function startTimer() {
        const timerElement = document.querySelector('.timer-text');
        const resendText = document.querySelector('.resend');

        clearInterval(timer);
        timeLeft = 60;

        timerElement.textContent = `in ${timeLeft} seconds`;

        timer = setInterval(() => {
            if (timeLeft <= 0) {
                clearInterval(timer);
                resendText.innerHTML = `Resend OTP <a href="#" onclick="resendOtp(event)">now</a>`;
                return;
            }

            timerElement.textContent = `in ${timeLeft} seconds`;
            timeLeft--;
        }, 1000);
    }

    async function validateEmail(event) {
        event.preventDefault();
        const email = document.getElementById('email').value;
        const emailError = document.getElementById('email-error');
        const sendButton = document.querySelector('#forgot-password-form button[type="submit"]');
        const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;

        sendButton.disabled = true;

        if (!email) {
            emailError.textContent = 'Please enter your email.';
            emailError.classList.add('active');
            sendButton.disabled = false;
            return false;
        } else if (!email.match(emailPattern)) {
            emailError.textContent = 'Please enter a valid email address.';
            emailError.classList.add('active');
            sendButton.disabled = false;
            return false;
        }

        emailError.classList.remove('active');

        try {
            const response = await fetch('/forgot-email-validation', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                credentials: 'include',
                body: JSON.stringify({ email })
            });

            const data = await response.json();

            if (data.success) {
                showToast(data.message || 'OTP sent successfully');
                document.getElementById('forgotPasswordForm').classList.remove('active');
                document.getElementById('otpVerificationForm').classList.add('active');
                startTimer();
            } else {
                showToast(data.message || 'User not found', 'error');
            }

        } catch (error) {
            showToast(error.message || 'Server error', 'error');
        }

        sendButton.disabled = false;
        return false;
    }

    async function otpValidateForm(event) {
        event.preventDefault();
        const otpInput = document.getElementById('otp').value;
        const otpError = document.getElementById('otp-error');

        if (!otpInput || !/^\d{6}$/.test(otpInput)) {
            otpError.textContent = 'Please enter a valid 6-digit OTP.';
            otpError.classList.add('active');
            return false;
        }

        otpError.classList.remove('active');

        try {
            const response = await fetch('/vrifyProfileOtp', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ otp: otpInput })
            });

            const data = await response.json();

            if (data.success) {
                clearInterval(timer);
                showToast(data.message || 'OTP verified successfully');
                document.getElementById('otpVerificationForm').classList.remove('active');
                document.getElementById('resetPasswordForm').classList.add('active');
            } else {
                showToast(data.message || 'Invalid OTP', 'error');
            }

        } catch (error) {
            showToast(error.message || 'Server error while verifying OTP', 'error');
        }
    }

    async function validatePassword(event) {
        event.preventDefault();
        const newPassword = document.getElementById('new-password').value;
        const confirmPassword = document.getElementById('confirm-password').value;
        const newPasswordError = document.getElementById('new-password-error');
        const confirmPasswordError = document.getElementById('confirm-password-error');
        let valid = true;

        if (!newPassword) {
            newPasswordError.textContent = 'Password cannot be empty.';
            newPasswordError.classList.add('active');
            valid = false;
        } else if (newPassword.length < 8 || !/[A-Za-z]/.test(newPassword) || !/\d/.test(newPassword)) {
            newPasswordError.textContent = 'Password must be at least 8 characters with letters and numbers.';
            newPasswordError.classList.add('active');
            valid = false;
        } else {
            newPasswordError.classList.remove('active');
        }

        if (!confirmPassword) {
            confirmPasswordError.textContent = 'Please confirm your password.';
            confirmPasswordError.classList.add('active');
            valid = false;
        } else if (confirmPassword !== newPassword) {
            confirmPasswordError.textContent = 'Passwords do not match.';
            confirmPasswordError.classList.add('active');
            valid = false;
        } else {
            confirmPasswordError.classList.remove('active');
        }

        if (!valid) return false;

        try {
            const response = await fetch('/reset-password', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                credentials: 'include',
                body: JSON.stringify({ newPassword, confirmPassword })
            });

            const data = await response.json();

            if (data.success) {
                showToast(data.message || 'Password reset successfully');
                setTimeout(() => window.location.href = '/login', 1500);
            } else {
                showToast(data.message || 'Failed to reset password', 'error');
            }

        } catch (error) {
            showToast(error.message || 'Server error', 'error');
        }
    }

    async function resendOtp(event) {
        event.preventDefault();

        try {
            const response = await fetch('/resend-reset-otp', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                credentials: 'include',
                body: JSON.stringify({})
            });

            const data = await response.json();

            if (data.success) {
                showToast(data.message || 'OTP resent successfully');
                timeLeft = 60;
                startTimer();
            } else {
                showToast(data.message || 'Failed to resend OTP', 'error');
            }

        } catch (error) {
            showToast(error.message || 'Server error', 'error');
        }
    }
</script>


</body>
</html>