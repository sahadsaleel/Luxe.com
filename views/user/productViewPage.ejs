<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= product.productName %></title>
  <link rel="stylesheet" href="/css/home.css">
  <link rel="stylesheet" href="/css/productViewPage.css">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
  <style>
    :root {
      --gucci-dark: #1a1a1a;
      --gucci-purple: #8a6a94;
    }

    .purchase-buttons {
      display: flex;
      gap: 10px;
      margin-top: 15px;
    }

    .btn-add-to-bag {
      flex: 1;
      background-color: white;
      color: var(--gucci-dark);
      border: 1px solid var(--gucci-dark);
      border-radius: 5px;
      padding: 12px 0;
      text-transform: uppercase;
      font-weight: 500;
      letter-spacing: 1px;
      transition: all 0.3s ease;
    }

    .btn-add-to-bag:hover {
      background-color: #000000;
      color: white;
    }

    .btn-buy-now {
      flex: 1;
      background-color: var(--gucci-purple);
      color: white;
      border: none;
      border-radius: 0;
      padding: 12px 0;
      text-transform: uppercase;
      font-weight: 500;
      letter-spacing: 1px;
      transition: all 0.3s ease;
    }

    .btn-buy-now:hover {
      background-color: var(--gucci-dark);
      color: white;
    }

    .btn-add-to-bag:disabled,
    .btn-buy-now:disabled,
    .wishlist-icon:disabled,
    .btn-wishlist:disabled {
      background-color: #cccccc;
      color: #666666;
      border-color: #cccccc;
      cursor: not-allowed;
      opacity: 0.6;
    }

    .purchase-buttons .btn {
      font-size: 0.85rem;
摄像头
    }

    .wishlist-icon, .btn-wishlist {
      background: transparent;
      border: none;
      font-size: 1.2rem;
      color: #8a6a94;
      transition: color 0.3s ease;
    }

    .wishlist-icon:hover, .btn-wishlist:hover {
      color: #1a1a1a;
    }

    .btn-wishlist {
      position: absolute;
      top: 10px;
      right: 10px;
    }

    .breadcrumb-container {
      padding: 15px 0;
      background-color: #f8f8f8;
    }

    .product-image-container {
      position: relative;
    }

    .img-zoom-lens {
      position: absolute;
      border: 1px solid #8a6a94;
      width: 120px;
      height: 120px;
      background: rgba(255, 255, 255, 0.3);
      cursor: none;
      display: none;
      border-radius: 50%;
    }

    .img-zoom-result {
      position: absolute;
      right: -450px;
      top: 0;
      border: 1px solid #666666;
      width: 400px;
      height: 400px;
      background-color: #ffffff;
      display: none;
      overflow: hidden;
      z-index: 10;
      background-repeat: no-repeat;
    }

    .thumbnail-gallery {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }

    .thumbnail {
      cursor: pointer;
      border: 1px solid transparent;
      transition: all 0.3s ease;
      opacity: 0.7;
    }

    .thumbnail img {
      width: 100%;
      height: 80px;
      object-fit: cover;
    }

    .thumbnail.active, .thumbnail:hover {
      border-color: #8a6a94;
      opacity: 1;
    }

    .product-details-card {
      padding: 1rem;
    }

    .product-price {
      font-size: 1.8rem;
      font-weight: 500;
      color: #8a6a94;
      margin-bottom: 1.5rem;
    }

    .size-option {
      display: flex;
      gap: 10px;
      flex-wrap: wrap;
    }

    .size-option input[type="radio"] {
      display: none;
    }

    .size-option label {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      width: 90px;
      height: 90px;
      border: 1px solid #e5e5e5;
      cursor: pointer;
      transition: all 0.3s ease;
      padding: 10px;
      border-radius: 4px;
    }

    .size-option input[type="radio"]:checked + label {
      border-color: #8a6a94;
      background-color: rgba(138, 106, 148, 0.05);
    }

    .gift-option {
      margin: 2rem 0;
      padding: 1.5rem;
      background-color: #f8f8f8;
      border-radius: 4px;
    }

    .zoom-modal {
      display: none;
      position: fixed;
      z-index: 1050;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.9);
      justify-content: center;
      align-items: center;
    }

    .zoom-modal-content {
      max-width: 90%;
      max-height: 90%;
      object-fit: contain;
    }

    .zoom-close {
      position: absolute;
      top: 20px;
      right: 30px;
      color: #ffffff;
      font-size: 2.5rem;
      font-weight: 300;
      cursor: pointer;
      transition: all 0.3s ease;
    }

    .zoom-close:hover {
      color: #8a6a94;
    }

    .similar-product-card {
      background-color: #ffffff;
      border-radius: 4px;
      overflow: hidden;
      box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
      transition: all 0.3s ease;
    }

    .similar-product-card:hover {
      transform: translateY(-5px);
      box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    }

    .carousel-control {
      width: 45px;
      height: 45px;
      border-radius: 50%;
      background-color: #ffffff;
      border: none;
      box-shadow: 0 5px 20px rgba(0, 0, 0, 0.05);
      display: flex;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: all 0.3s ease;
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
    }

    .carousel-control.prev {
      left: 0;
    }

    .carousel-control.next {
      right: 0;
    }

    .carousel-control:hover {
      background-color: #8a6a94;
      color: #ffffff;
    }

    .toast-container {
      position: fixed;
      bottom: 20px;
      right: 20px;
      z-index: 1055;
    }
  </style>
</head>
<body>
<%- include('../../views/partials/user/header') %>
<div class="container py-4">
  <div class="breadcrumb-container">
    <div class="container">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item"><a href="/shop">Shop</a></li>
        <li class="breadcrumb-item active">Product</li>
      </ol>
    </div>
  </div>
  <div class="row">
    <div class="col-md-6 mb-4">
      <div class="row">
        <div class="col-md-10 order-md-2">
          <div class="product-image-container">
            <div class="product-image">
              <div class="img-zoom-lens" id="zoomLens"></div>
              <img src="<%= product.productImage[0] %>" alt="product image" class="img-fluid" id="productImg">
            </div>
            <div class="img-zoom-result" id="zoomResult"></div>
          </div>
        </div>
        <div class="col-md-2 order-md-1">
          <div class="thumbnail-gallery d-none d-md-block">
            <% for(let i = 0; i < product.productImage.length; i++) { %>
              <div class="thumbnail <%= i === 0 ? 'active' : '' %>">
                <img src="<%= product.productImage[i] %>" alt="product image">
              </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>
    <div class="col-md-6">
      <div class="product-details-card">
        <div class="d-flex justify-content-between align-items-center">
          <h1 class="h3"><%= product.productName %></h1>
          <button class="wishlist-icon" data-product-id="<%= product._id %>" onclick="toggleWishlist('<%= product._id %>', this)" <%= product.variants.every(variant => variant.quantity === 0) ? 'disabled' : '' %>>
            <i class="<%= isInWishlist ? 'fa-solid fa-heart' : 'fa-regular fa-heart' %>" style="<%= isInWishlist ? 'color: red;' : '' %>"></i>
          </button>
        </div>
        <div class="product-price" id="productPrice">
          ₹<%= product.variants[0].salePrice > 0 ? product.variants[0].salePrice : product.variants[0].regularPrice %>
        </div>
        <div class="mt-4 mb-3">
          <p class="mb-2 fw-bold">Select Size:</p>
          <div class="size-option">
            <% product.variants.forEach((variant, index) => { %>
              <input type="radio" name="size" id="size-<%= variant.size %>" value="<%= variant.size %>" <%= index === 0 ? 'checked' : '' %>>
              <label for="size-<%= variant.size %>">
                <span><%= variant.size %>ml</span>
                <span>₹<%= variant.salePrice > 0 ? variant.salePrice : variant.regularPrice %></span>
              </label>
            <% }) %>
          </div>
        </div>
        <div class="gift-option">
          <div class="gift-option-title">
            <i class="fas fa-gift"></i> Make it special
          </div>
          <div class="form-check">
            <input class="form-check-input" type="checkbox" id="giftWrap">
            <label class="form-check-label" for="giftWrap">
              Add luxury gift wrapping (+450 ₹)
            </label>
          </div>
          <div class="form-check">
            <input class="form-check-input" type="checkbox" id="giftCard">
            <label class="form-check-label" for="giftCard">
              Include a personalized message card
            </label>
          </div>
        </div>
        <div class="availability my-3">
          <% if (product.variants.some(variant => variant.quantity > 0)) { %>
            <span class="text-success"><i class="fas fa-check-circle"></i> Available</span>
            <p class="small mt-2">Enjoy complimentary delivery or Collect In Store</p>
          <% } else { %>
            <span class="text-danger"><i class="fas fa-times-circle"></i> Out of Stock</span>
            <p class="small mt-2">Check back soon for restock updates</p>
          <% } %>
        </div>
        <div class="purchase-buttons">
            <button class="btn btn-add-to-bag" 
                    data-product-id="<%= product._id %>" 
                    onclick="addToCart('<%= product._id %>')"
                    <%= product.variants.every(variant => variant.quantity === 0) ? 'disabled' : '' %>>
              Add to bag
          </button>
          <button class="btn btn-buy-now" 
                    <%= product.variants.every(variant => variant.quantity === 0) ? 'disabled' : '' %>>
              Buy now
          </button>
        </div>
      </div>
      <div class="product-info mt-4">
        <div class="accordion" id="productAccordion">
          <div class="accordion-item border-0">
            <h2 class="accordion-header">
              <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#shippingInfo">
                SHIPPING & RETURNS INFO
              </button>
            </h2>
            <div id="shippingInfo" class="accordion-collapse collapse" data-bs-parent="#productAccordion">
              <div class="accordion-body">
                <p><i class="fas fa-truck"></i> Free express shipping on all orders above 10,000 ₹</p>
                <p><i class="fas fa-undo"></i> Easy returns within 30 days</p>
                <p><i class="fas fa-map-marker-alt"></i> Store pickup available at select locations</p>
              </div>
            </div>
          </div>
          <div class="accordion-item border-0">
            <h2 class="accordion-header">
              <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#paymentOptions">
                Payment Options
              </button>
            </h2>
            <div id="paymentOptions" class="accordion-collapse collapse" data-bs-parent="#productAccordion">
              <div class="accordion-body">
                <p><i class="fas fa-money-check-alt"></i> Razorpay</p>
                <p><i class="fas fa-wallet"></i> Luxe Wallet</p>
                <p><i class="fas fa-truck"></i> Cash on Delivery</p>
              </div>
            </div>
          </div>
          <div class="accordion-item border-0">
            <h2 class="accordion-header">
              <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#packaging">
                Luxe.com Packaging
              </button>
            </h2>
            <div id="packaging" class="accordion-collapse collapse" data-bs-parent="#productAccordion">
              <div class="accordion-body">
                <p><i class="fas fa-box-open"></i> Premium gift packaging with signature ribbon</p>
                <p><i class="fas fa-certificate"></i> Authenticity certificate included</p>
                <p><i class="fas fa-leaf"></i> Eco-friendly packaging materials</p>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="service-info mt-4">
        <div class="d-flex flex-wrap">
          <span class="info-badge"><i class="fas fa-lock"></i> Secure payment</span>
          <span class="info-badge"><i class="fas fa-truck"></i> Free Shipping & Returns</span>
          <span class="info-badge"><i class="fas fa-box"></i> Free shipping</span>
        </div>
      </div>
    </div>
  </div>
  <div class="row mt-5">
    <div class="col-md-6">
      <img src="/api/placeholder/600/750" alt="Product Image" class="img-fluid">
    </div>
    <div class="col-md-6">
      <h3 class="mb-3">Product Details</h3>
      <p class="small text-muted">Product ID: <%= product._id %></p>
      <div class="product-specs mt-4">
        <div class="row mb-2">
          <div class="col-6">Brand:</div>
          <div class="col-6"><%= brand.brandName || 'N/A' %></div>
        </div>
        <div class="row mb-2">
          <div class="col-6">Product Category:</div>
          <div class="col-6"><%= category.name || 'N/A' %></div>
        </div>
        <div class="row mb-2">
          <div class="col-6">Longevity:</div>
          <div class="col-6">Long-lasting</div>
        </div>
        <div class="row mb-2">
          <div class="col-6">Size:</div>
          <div class="col-6">
            <%= product.variants.map(v => v.size + 'ml').join(' / ') %>
          </div>
        </div>
      </div>
      <div class="product-description mt-5">
        <h3 class="mb-3">Product Description</h3>
        <p><%= product.productDescription || 'No description available' %></p>
        <div class="mt-4">
          <p class="mb-2"><strong>Fragrance Notes:</strong></p>
          <div>
            <span class="fragrance-note">Lilac Accord</span>
            <span class="fragrance-note">Patchouli Oil</span>
            <span class="fragrance-note">Musky Ambery Accord</span>
            <span class="fragrance-note">Violet</span>
            <span class="fragrance-note">Raspberry</span>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="similar-products-container my-5">
    <h2 class="section-title">DISCOVER SIMILAR PRODUCTS</h2>
    <div class="product-carousel position-relative px-4">
      <div class="row similar-products-slider">
        <% if (similarProducts.length === 0) { %>
          <div class="col-12 text-center">
            <p>No similar products available.</p>
          </div>
        <% } else { %>
          <% similarProducts.forEach(product => { %>
            <div class="col-md-3 mb-4">
              <div class="similar-product-card h-100">
                <div class="product-image-container">
                  <a href="/productViewPage?id=<%= product._id %>">
                    <img src="<%= product.productImage[0] || '/images/placeholder.jpg' %>" alt="<%= product.productName %>" class="img-fluid">
                  </a>
                  <button class="btn-wishlist" onclick="toggleWishlist('<%= product._id %>', this)" <%= product.variants.every(variant => variant.quantity === 0) ? 'disabled' : '' %>>
                    <i class="<%= wishlist.products.some(item => item.productId.toString() === product._id.toString()) ? 'fa-solid fa-heart' : 'fa-regular fa-heart' %>" style="<%= wishlist.products.some(item => item.productId.toString() === product._id.toString()) ? 'color: red;' : '' %>"></i>
                  </button>
                </div>
                <div class="product-info p-3">
                  <h5 class="product-title"><%= product.productName %></h5>
                  <div class="similar-product-price mb-2">
                    ₹<%= product.variants[0].salePrice > 0 ? product.variants[0].salePrice : product.variants[0].regularPrice %>
                  </div>
                  <button class="btn btn-add-to-bag w-100">Add to bag</button>
                </div>
              </div>
            </div>
          <% }) %>
        <% } %>
      </div>
      <button class="carousel-control prev" id="prevBtn">
        <i class="fas fa-chevron-left"></i>
      </button>
      <button class="carousel-control next" id="nextBtn">
        <i class="fas fa-chevron-right"></i>
      </button>
    </div>
  </div>
</div>
<div id="imageZoomModal" class="zoom-modal">
  <span class="zoom-close">×</span>
  <img class="zoom-modal-content" id="zoomedImage">
</div>
<%- include("../../views/partials/user/footer") %>
 <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
<script>
  async function toggleWishlist(productId, button) {
      try {
        const icon = button.querySelector('i');
        const isInWishlist = icon.classList.contains('fa-solid');
        button.disabled = true;

        const url = isInWishlist ? `/wishlist/remove/${productId}` : `/wishlist/add/${productId}`;
        const response = await fetch(url, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          credentials: 'same-origin',
        });

        if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
        const result = await response.json();

        if (result.success) {
          if (isInWishlist) {
            icon.classList.remove('fa-solid', 'fa-heart');
            icon.classList.add('fa-regular', 'fa-heart');
            icon.style.color = '';
            showToast('Removed from wishlist', 'success');
          } else {
            icon.classList.remove('fa-regular', 'fa-heart');
            icon.classList.add('fa-solid', 'fa-heart');
            icon.style.color = 'red';
            showToast('Added to wishlist', 'success');
          }
        } else {
          if (result.message.includes('log in')) {
            window.location.href = '/login';
          } else {
            showToast(result.message, 'error');
          }
        }
      } catch (error) {
        console.error('Error toggling wishlist:', error);
        showToast('Failed to update wishlist. Please try again.', 'error');
      } finally {
        button.disabled = false;
      }
    }

    function showToast(message, icon = 'success') {
      Swal.fire({
        toast: true,
        position: 'top-end',
        icon: icon,
        title: message,
        showConfirmButton: false,
        timer: 2000,
        timerProgressBar: true,
      });
    }

  document.addEventListener('DOMContentLoaded', function() {
    const thumbnails = document.querySelectorAll('.thumbnail');
    const mainImage = document.querySelector('.product-image img');
    const lens = document.getElementById('zoomLens');
    const result = document.getElementById('zoomResult');
    const modal = document.getElementById('imageZoomModal');
    const modalImg = document.getElementById('zoomedImage');
    const priceElement = document.getElementById('productPrice');
    const sizeRadios = document.querySelectorAll('input[name="size"]');
    let cx, cy;

    function calculateRatio() {
      cx = result.offsetWidth / lens.offsetWidth;
      cy = result.offsetHeight / lens.offsetHeight;
    }

    function getCursorPos(e) {
      const rect = mainImage.getBoundingClientRect();
      const x = e.clientX - rect.left;
      const y = e.clientY - rect.top;
      return { x, y };
    }

    function moveLens(e) {
      e.preventDefault();
      const pos = getCursorPos(e);
      let x = pos.x - lens.offsetWidth / 2;
      let y = pos.y - lens.offsetHeight / 2;
      x = Math.max(0, Math.min(x, mainImage.width - lens.offsetWidth));
      y = Math.max(0, Math.min(y, mainImage.height - lens.offsetHeight));
      lens.style.left = x + 'px';
      lens.style.top = y + 'px';
      result.style.backgroundImage = `url('${mainImage.src}')`;
      result.style.backgroundSize = `${mainImage.width * cx}px ${mainImage.height * cy}px`;
      result.style.backgroundPosition = `-${x * cx}px -${y * cy}px`;
    }

    function initZoom() {
      lens.style.display = 'none';
      result.style.display = 'none';
      mainImage.addEventListener('mouseenter', (e) => {
        if (window.innerWidth > 992) {
          lens.style.display = 'block';
          result.style.display = 'block';
          calculateRatio();
          moveLens(e);
        }
      });
      mainImage.addEventListener('mouseleave', () => {
        lens.style.display = 'none';
        result.style.display = 'none';
      });
      mainImage.addEventListener('mousemove', moveLens);
      lens.addEventListener('mousemove', moveLens);
      window.addEventListener('resize', () => {
        if (window.innerWidth > 992) {
          calculateRatio();
        }
      });
    }

    thumbnails.forEach(thumbnail => {
      thumbnail.addEventListener('click', function() {
        thumbnails.forEach(t => t.classList.remove('active'));
        this.classList.add('active');
        const newSrc = this.querySelector('img').src;
        mainImage.src = newSrc;
        if (window.innerWidth > 992) {
          initZoom();
        }
      });
    });

    mainImage.addEventListener('click', () => {
      if (window.innerWidth <= 992) {
        modal.style.display = 'flex';
        modalImg.src = mainImage.src;
      }
    });

    document.querySelector('.zoom-close').addEventListener('click', () => {
      modal.style.display = 'none';
    });

    if (window.innerWidth > 992) {
      initZoom();
    }

    const variants = <%- JSON.stringify(product.variants) %>;
    sizeRadios.forEach(radio => {
      radio.addEventListener('change', function() {
        const selectedSize = this.value;
        const selectedVariant = variants.find(v => v.size.toString() === selectedSize);
        if (selectedVariant) {
          const price = selectedVariant.salePrice > 0 ? selectedVariant.salePrice : selectedVariant.regularPrice;
          priceElement.textContent = `₹${price}`;
        }
      });
    });

    const slider = document.querySelector('.similar-products-slider');
    const prevBtn = document.getElementById('prevBtn');
    const nextBtn = document.getElementById('nextBtn');
    let scrollPosition = 0;

    function getScrollAmount() {
      const cardWidth = document.querySelector('.similar-product-card')?.offsetWidth || 0;
      return cardWidth * 2 + 40;
    }

    nextBtn.addEventListener('click', function() {
      scrollPosition += getScrollAmount();
      if (scrollPosition > slider.scrollWidth - slider.clientWidth) {
        scrollPosition = slider.scrollWidth - slider.clientWidth;
      }
      slider.scrollTo({
        left: scrollPosition,
        behavior: 'smooth'
      });
    });

    prevBtn.addEventListener('click', function() {
      scrollPosition -= getScrollAmount();
      if (scrollPosition < 0) {
        scrollPosition = 0;
      }
      slider.scrollTo({
        left: scrollPosition,
        behavior: 'smooth'
      });
    });

    window.addEventListener('resize', function() {
      if (scrollPosition > slider.scrollWidth - slider.clientWidth) {
        scrollPosition = Math.max(0, slider.scrollWidth - slider.clientWidth);
        slider.scrollLeft = scrollPosition;
      }
    });
  });

    async function addToCart(productId) {
        try {
            const selectedSizeRadio = document.querySelector('input[name="size"]:checked');
            if (!selectedSizeRadio) {
                showToast('Please select a size.', 'error');
                return;
            }

            const variants = <%- JSON.stringify(product.variants) %>;
            const selectedSize = selectedSizeRadio.value;
            const selectedVariant = variants.find(v => v.size.toString() === selectedSize);

            if (!selectedVariant) {
                showToast('Selected variant not found.', 'error');
                return;
            }

            console.log('Adding to cart:', { productId, variantId: selectedVariant._id });

            const addToBagBtn = document.querySelector(`.btn-add-to-bag[data-product-id="${productId}"]`);
            addToBagBtn.disabled = true;

            const response = await fetch('/cart/add', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ productId, variantId: selectedVariant._id }),
                credentials: 'same-origin',
            });

            const result = await response.json();

            if (result.success) {
                showToast('Product added to cart!', 'success');
                window.location.href = '/cart';
            } else {
                if (result.message.includes('log in')) {
                    window.location.href = '/login';
                } else {
                    showToast(result.message, 'error');
                }
            }
        } catch (error) {
            console.error('Error adding to cart:', error);
            showToast('Failed to add to cart. Please try again.', 'error');
        } finally {
            const addToBagBtn = document.querySelector(`.btn-add-to-bag[data-product-id="${productId}"]`);
            addToBagBtn.disabled = false;
        }
    }
</script>
</body>
</html>