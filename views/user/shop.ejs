<link rel="stylesheet" href="/css/home.css">
<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: Arial, sans-serif;
    }

    nav {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 30px 20px;
        border-bottom: 1px solid #e0e0e0;
    }

    .filter-button, .sort-button {
        background: none;
        border: none;
        cursor: pointer;
        display: flex;
        align-items: center;
        font-weight: 700;
    }

    .modal {
        position: fixed;
        top: 90px;
        background-color: white;
        border: 1px solid #e0e0e0;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        max-width: 450px;
        width: 90%;
        padding: 20px;
        z-index: 100;
        display: none;
    }

    .filter-modal {
        left: 20px;
    }

    .sort-modal {
        right: 20px;
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
    }

    .close-button {
        background: none;
        border: none;
        font-size: 24px;
        cursor: pointer;
    }

    .filter-section {
        margin-bottom: 20px;
    }

    .filter-title {
        display: flex;
        justify-content: space-between;
        padding: 12px;
        border: 1px solid #e0e0e0;
        margin-bottom: 15px;
        cursor: pointer;
    }

    .filter-options {
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 15px;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.3s ease;
    }

    .filter-options.show {
        max-height: 500px;
    }

    .filter-option {
        display: flex;
        align-items: center;
        gap: 10px;
    }

    input[type="checkbox"], input[type="radio"] {
        width: 18px;
        height: 18px;
    }

    .price-range {
        display: flex;
        align-items: center;
        gap: 10px;
        margin-top: 20px;
    }

    .price-input {
        width: 120px;
        padding: 10px;
        border: 1px solid #ccc;
        text-align: center;
    }

    .button-container {
        display: flex;
        justify-content: space-between;
        gap: 10px;
        margin-top: 30px;
    }

    .clear-button {
        flex: 1;
        padding: 12px;
        background: white;
        border: 1px solid #000;
        cursor: pointer;
        font-weight: 500;
    }

    .show-button {
        flex: 1;
        padding: 12px;
        background: #000;
        color: white;
        border: none;
        cursor: pointer;
        font-weight: 500;
    }

    .arrow-icon {
        transition: transform 0.3s ease;
    }

    .arrow-icon.rotate {
        transform: rotate(180deg);
    }

    .product-title {
        margin-top: 25px;
    }

    .pagination {
        display: flex;
        justify-content: center;
        align-items: center;
        gap: 10px;
        margin-top: 20px;
    }

    .pagination a {
        padding: 8px 12px;
        border: 1px solid #e0e0e0;
        text-decoration: none;
        color: #000;
        font-weight: 500;
    }

    .pagination a.active {
        background: #000;
        color: white;
    }

    .pagination a:hover {
        background: #f0f0f0;
    }
</style>

<%- include('../../views/partials/user/header') %>

<nav>
    <button class="filter-button" id="filterBtn">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 8px;">
            <line x1="4" y1="21" x2="4" y2="14"></line>
            <line x1="4" y1="10" x2="4" y2="3"></line>
            <line x1="12" y1="21" x2="12" y2="12"></line>
            <line x1="12" y1="8" x2="12" y2="3"></line>
            <line x1="20" y1="21" x2="20" y2="16"></line>
            <line x1="20" y1="12" x2="20" y2="3"></line>
            <line x1="1" y1="14" x2="7" y2="14"></line>
            <line x1="9" y1="8" x2="15" y2="8"></line>
            <line x1="17" y1="16" x2="23" y2="16"></line>
        </svg>
        FILTER
    </button>

    
    <button class="sort-button" id="sortBtn">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 8px;">
            <path d="M11 5h10"></path>
            <path d="M11 9h7"></path>
            <path d="M11 13h4"></path>
            <path d="M3 17l3 3 3-3"></path>
            <path d="M6 18V5"></path>
        </svg>
        SORT
    </button>
</nav>

<!-- Filter Modal -->
<div class="modal filter-modal" id="filterModal">
    <div class="modal-header">
        <h2>SHOW FILTERS</h2>
        <button class="close-button" id="closeFilterBtn">×</button>
    </div>

    <div class="filter-section">
        <div class="filter-title" data-target="brandOptions">
            <span>BRANDS</span>
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="arrow-icon">
                <polyline points="18 15 12 9 6 15"></polyline>
            </svg>
        </div>
        <div class="filter-options" id="brandOptions">
            <% if (brands && Array.isArray(brands) && brands.length > 0) { %>
                <% brands.forEach(brand => { %>
                    <label class="filter-option">
                        <input type="checkbox" name="brandf" value="<%= brand.brandName %>" <%= currentFilters.brandf.includes(brand.brandName) ? 'checked' : '' %>>
                        <%= brand.brandName %>
                    </label>
                <% }) %>
            <% } else { %>
                <p>No listed brands available</p>
            <% } %>
        </div>
    </div>

    <div class="filter-section">
        <div class="filter-title" data-target="categoryOptions">
            <span>CATEGORY</span>
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="arrow-icon">
                <polyline points="18 15 12 9 6 15"></polyline>
            </svg>
        </div>
        <div class="filter-options" id="categoryOptions">
            <% categories.forEach(category => { %>
                <label class="filter-option">
                    <input type="checkbox" name="categoryf" value="<%= category.name %>" <%= currentFilters.categoryf.includes(category.name) ? 'checked' : '' %>>
                    <%= category.name %>
                </label>
            <% }) %>
        </div>
    </div>

    <div class="button-container">
        <button class="clear-button" id="clearFilters">CLEAR ALL</button>
        <button class="show-button" id="applyFilters">SHOW PRODUCTS</button>
    </div>
</div>

<!-- Sort Modal -->
<div class="modal sort-modal" id="sortModal">
    <div class="modal-header">
        <h2>SORT</h2>
        <button class="close-button" id="closeSortBtn">×</button>
    </div>

    <div class="filter-options show" style="display: flex; flex-direction: column; gap: 15px; margin-bottom: 30px;">
        <label class="filter-option">
            <input type="radio" name="sort" value="A-Z" <%= currentFilters.sort === 'A-Z' || !currentFilters.sort ? 'checked' : '' %>>
            A-Z Order
        </label>
        <label class="filter-option">
            <input type="radio" name="sort" value="Z-A" <%= currentFilters.sort === 'Z-A' ? 'checked' : '' %>>
            Z-A Order
        </label>
        <label class="filter-option">
            <input type="radio" name="sort" value="price-low-high" <%= currentFilters.sort === 'price-low-high' ? 'checked' : '' %>>
            Price: Low → High
        </label>
        <label class="filter-option">
            <input type="radio" name="sort" value="price-high-low" <%= currentFilters.sort === 'price-high-low' ? 'checked' : '' %>>
            Price: High → Low
        </label>
    </div>

    <h3 style="margin-bottom: 15px;">PRICE</h3>
    <div style="display: flex; align-items: center; gap: 5px;">
        <div>From</div>
        <input type="text" class="price-input" id="minPrice" value="<%= currentFilters.minValue || '' %>">
        <div>To</div>
        <input type="text" class="price-input" id="maxPrice" value="<%= currentFilters.maxValue || '' %>">
    </div>

    <div class="button-container">
        <button class="clear-button" id="clearSort">CLEAR ALL</button>
        <button class="show-button" id="applySort">SHOW PRODUCTS</button>
    </div>
</div>

<div class="hero">
    <div class="hero-image">
        <img src="/img/image13.png" alt="banner_image">
    </div>
</div>

<div class="main-content">
    <h2 class="section-title">Exclusive To You</h2>

    <div class="celebrity-products">
        <% products.forEach(product => { %>
            <% if (product.status === 'listed') { %>
                <div class="product-card">
                    <button class="wishlist-btn">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>
                        </svg>
                    </button>
    
                    <div class="product-image">
                        <a href="/productViewPage?id=<%= product._id %>">
                            <img src="<%= product.productImage[0] %>" alt="<%= product.productName %>">
                        </a>
                    </div>
                    <div class="product-info">
                        <h3 class="product-title"><%= product.productName %></h3>
                        <p class="product-price">
                            ₹<%= product.variants[0].salePrice > 0 ? product.variants[0].salePrice : product.variants[0].regularPrice %>
                        </p>
                        <button onclick="window.location.href='/addToCart?id=<%= product._id %>'" class="add-to-cart">ADD TO BAG</button>
                    </div>
                </div>
            <% } %>
        <% }) %>
    </div>
</div>

<%- include("../../views/partials/user/footer") %>

<script>
    // Get modal elements
    const filterModal = document.getElementById('filterModal');
    const sortModal = document.getElementById('sortModal');
    
    // Get button elements
    const filterBtn = document.getElementById('filterBtn');
    const sortBtn = document.getElementById('sortBtn');
    const closeFilterBtn = document.getElementById('closeFilterBtn');
    const closeSortBtn = document.getElementById('closeSortBtn');
    const applyFiltersBtn = document.getElementById('applyFilters');
    const applySortBtn = document.getElementById('applySort');
    const clearFiltersBtn = document.getElementById('clearFilters');
    const clearSortBtn = document.getElementById('clearSort');
    
    // Open filter modal
    filterBtn.addEventListener('click', () => {
        filterModal.style.display = 'block';
        sortModal.style.display = 'none';
    });
    
    // Open sort modal
    sortBtn.addEventListener('click', () => {
        sortModal.style.display = 'block';
        filterModal.style.display = 'none';
    });
    
    // Close filter modal
    closeFilterBtn.addEventListener('click', () => {
        filterModal.style.display = 'none';
    });
    
    // Close sort modal
    closeSortBtn.addEventListener('click', () => {
        sortModal.style.display = 'none';
    });
    
    // Handle filter section dropdowns
    const filterTitles = document.querySelectorAll('.filter-title');
    filterTitles.forEach(title => {
        title.addEventListener('click', () => {
            const targetId = title.getAttribute('data-target');
            const targetSection = document.getElementById(targetId);
            const arrow = title.querySelector('.arrow-icon');
            
            targetSection.classList.toggle('show');
            arrow.classList.toggle('rotate');
        });
    });
    
    // Close modals when clicking outside
    window.addEventListener('click', (event) => {
        if (event.target !== filterModal && 
            !filterModal.contains(event.target) && 
            event.target !== filterBtn &&
            event.target !== sortModal && 
            !sortModal.contains(event.target) && 
            event.target !== sortBtn) {
            filterModal.style.display = 'none';
            sortModal.style.display = 'none';
        }
    });

    // Apply filters
    applyFiltersBtn.addEventListener('click', () => {
        const params = new URLSearchParams();
        
        // Collect brand filters
        const brandCheckboxes = document.querySelectorAll('input[name="brandf"]:checked');
        brandCheckboxes.forEach(checkbox => {
            params.append('brandf', checkbox.value);
        }); 

        // Collect category filters
        const categoryCheckboxes = document.querySelectorAll('input[name="categoryf"]:checked');
        categoryCheckboxes.forEach(checkbox => {
            params.append('categoryf', checkbox.value);
        });

        // Preserve sort and price parameters
        const currentParams = new URLSearchParams(window.location.search);
        ['sort', 'minValue', 'maxValue', 'search'].forEach(key => {
            if (currentParams.has(key)) {
                params.set(key, currentParams.get(key));
            }
        });

        // Ensure a sort parameter is always included
        if (!params.has('sort')) {
            params.set('sort', 'A-Z');
        }

        window.location.href = `/shop?${params.toString()}`;
    });

    // Apply sort and price range
    applySortBtn.addEventListener('click', () => {
        const params = new URLSearchParams();

        // Collect sort option (default to A-Z if none selected)
        const sortCheckbox = document.querySelector('input[name="sort"]:checked');
        params.set('sort', sortCheckbox ? sortCheckbox.value : 'A-Z');

        // Collect price range
        const minPrice = document.getElementById('minPrice').value;
        const maxPrice = document.getElementById('maxPrice').value;
        if (minPrice) params.set('minValue', minPrice);
        if (maxPrice) params.set('maxValue', maxPrice);

        // Preserve other query parameters
        const currentParams = new URLSearchParams(window.location.search);
        ['brandf', 'categoryf', 'search'].forEach(key => {
            if (currentParams.has(key)) {
                currentParams.getAll(key).forEach(value => {
                    params.append(key, value);
                });
            }
        });

        window.location.href = `/shop?${params.toString()}`;
    });

    // Clear filters
    clearFiltersBtn.addEventListener('click', () => {
        const params = new URLSearchParams(window.location.search);
        ['brandf', 'categoryf'].forEach(key => params.delete(key));
        if (!params.has('sort')) {
            params.set('sort', 'A-Z');
        }
        window.location.href = `/shop?${params.toString()}`;
    });

    // Clear sort and price
    clearSortBtn.addEventListener('click', () => {
        const params = new URLSearchParams(window.location.search);
        ['sort', 'minValue', 'maxValue'].forEach(key => params.delete(key));
        params.set('sort', 'A-Z');
        window.location.href = `/shop?${params.toString()}`;
    });
</script>