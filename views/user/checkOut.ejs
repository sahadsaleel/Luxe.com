<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/checkout.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    
</head>
<body>
    <%- include('../../views/partials/user/header') %>

    <div class="breadcrumb-container">
        <div class="container">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/cart">Shopping Bag</a></li>
                <li class="breadcrumb-item active">Checkout</li>
            </ol>
        </div>
    </div>

    <main class="checkout-section">
        <div class="container">
            <h1 class="section-title">Checkout</h1>
            <form id="checkout-form">
                <div class="checkout-container">
                    <div class="checkout-details">
                        <!-- Cart Items List -->
                        <div class="checkout-box">
                            <div class="box-header">
                                <h2>Order Items</h2>
                                <span class="box-badge"><%= cartItems.length %> Items</span>
                            </div>
                            <div class="box-content">
                                <div class="cart-items">
                                    <% cartItems.forEach(item => { %>
                                        <% if (item.productId) { %>
                                            <div class="cart-item" data-item-id="<%= item._id %>">
                                                <% if (item.offer) { %>
                                                    <div class="offer-badge <%= item.offer.type %> <%= item.offer.percentage >= 40 ? 'limited-time' : '' %>">
                                                        <%= item.offer.percentage %>% OFF
                                                    </div>
                                                <% } %>

                                                <div class="item-image">
                                                    <img src="/img/placeholder.png" alt="Invalid Product" />
                                                </div>
                                                <div class="item-details">
                                                    <div class="item-top">
                                                        <div class="item-info">
                                                            <h3 class="item-title"><%= item.productName || 'Unknown Product' %></h3>
                                                            <div class="item-meta">
                                                                <span>Size: <%= item.variant.size || 'N/A' %></span>
                                                                <% if (item.isGiftWrapped) { %>
                                                                    <span> | Gift Wrapped (+₹100)</span>
                                                                <% } %>
                                                                <% if (item.offer && item.offer.name) { %>
                                                                    <span> | <%= item.offer.name %></span>
                                                                <% } %>
                                                                <% if (item.stockAvailable <= 5 && item.stockAvailable > 0) { %>
                                                                    <div class="low-stock-warning">Only <%= item.stockAvailable %> left in stock!</div>
                                                                <% } %>
                                                            </div>
                                                        </div>
                                                        <div class="item-price-container">
                                                            <div class="price-container">
                                                                <% if (item.offer) { %>
                                                                    <span class="current-price">₹<%= (item.price * item.quantity || 0).toFixed(2) %></span>
                                                                    <span class="original-price">₹<%= (item.basePrice * item.quantity || 0).toFixed(2) %></span>
                                                                    <span class="discount-percent"><%= item.offer.percentage %>% off</span>
                                                                <% } else { %>
                                                                    <span class="current-price">₹<%= (item.basePrice * item.quantity || 0).toFixed(2) %></span>
                                                                <% } %>
                                                            </div>
                                                            <% if (item.offer) { %>
                                                                <div class="savings-text">
                                                                    You save ₹<%= ((item.basePrice - item.price) * item.quantity || 0).toFixed(2) %>
                                                                </div>
                                                            <% } %>
                                                        </div>
                                                    </div>
                                                    <div class="item-quantity">
                                                        Quantity: <%= item.quantity %>
                                                    </div>
                                                </div>
                                            </div>
                                        <% } else { %>
                                            <div class="cart-item" data-item-id="<%= item._id %>">
                                                <div class="item-image">
                                                    <img src="/img/placeholder.png" alt="Invalid Product" />
                                                </div>
                                                <div class="item-details">
                                                    <div class="item-top">
                                                        <div class="item-info">
                                                            <h3 class="item-title">Invalid Product</h3>
                                                            <p class="item-subtitle">This product is no longer available.</p>
                                                        </div>
                                                        <div class="item-price-container">
                                                            <p class="item-price">₹<%= item.price?.toFixed(2) || '0.00' %></p>
                                                        </div>
                                                    </div>
                                                    <div class="item-quantity">
                                                        Quantity: <%= item.quantity || 1 %>
                                                    </div>
                                                </div>
                                            </div>
                                        <% } %>
                                    <% }) %>
                                </div>
                            </div>
                        </div>

                        <!-- Shipping Address -->
                        <div class="checkout-box">
                            <div class="box-header">
                                <h2>Shipping Address</h2>
                                <span class="box-badge">Step 1 of 3</span>
                            </div>
                            <div class="box-content">
                                <% if (addresses.length > 0) { %>
                                    <% addresses.forEach((address, index) => { %>
                                        <div class="address-card <%= index === 0 ? 'selected' : '' %>">
                                            <input type="radio" name="addressId" value="<%= address._id %>" <%= index === 0 ? 'checked' : '' %> hidden>
                                            <div class="address-tag"><%= address.addressType %></div>
                                            <h3><%= address.name %></h3>
                                            <div class="address-details">
                                                <%= address.landMark %><br>
                                                <%= address.city %>, <%= address.state %> <%= address.pincode %><br>
                                                Phone: <%= address.phone %><br>
                                                Alternate Phone: <%= address.altPhone %>
                                            </div>
                                            <div class="address-actions">
                                                <button type="button" class="address-btn edit-address-btn" data-id="<%= address._id %>">
                                                    <i class="fas fa-edit"></i> Edit
                                                </button>
                                            </div>
                                        </div>
                                    <% }) %>
                                <% } else { %>
                                    <div class="no-addresses">
                                        <i class="fas fa-map-marker-alt"></i>
                                        <h3>No addresses found</h3>
                                        <p>Please add a shipping address to proceed.</p>
                                        <button type="button" class="add-first-address-btn" id="addFirstAddressBtn">
                                            <i class="fas fa-plus"></i> Add your first address
                                        </button>
                                    </div>
                                <% } %>
                                <button type="button" class="add-address-btn" id="addAddressBtn">
                                    <i class="fas fa-plus"></i> Add New Address
                                </button>
                            </div>
                        </div>

                        <!-- Delivery Method -->
                        <div class="checkout-box">
                            <div class="box-header">
                                <h2>Delivery Method</h2>
                                <span class="box-badge">Step 2 of 3</span>
                            </div>
                            <div class="box-content">
                                <div class="delivery-options">
                                    <% deliveryOptions.forEach((option, index) => { %>
                                        <div class="delivery-option <%= index === 0 ? 'selected' : '' %>">
                                            <div class="delivery-radio">
                                                <input type="radio" id="<%= option.id %>" name="deliveryMethod" value="<%= option.id %>" <%= index === 0 ? 'checked' : '' %>>
                                                <span class="custom-radio"></span>
                                            </div>
                                            <div class="delivery-info">
                                                <h3><%= option.title %></h3>
                                                <p><%= option.description %></p>
                                                <p class="delivery-price"><%= option.price === 0 ? 'FREE' : '₹' + option.price %></p>
                                            </div>
                                        </div>
                                    <% }) %>
                                </div>
                            </div>
                        </div>

                        <!-- Payment Method -->
                        <div class="checkout-box">
                            <div class="box-header">
                                <h2>Payment Method</h2>
                                <span class="box-badge">Step 3 of 3</span>
                            </div>
                            <div class="box-content">
                                <div class="payment-options">
                                    <% paymentOptions.forEach(option => { %>
                                        <div class="payment-option <%= option.id === 'razorpay' ? 'selected' : '' %>">
                                            <div class="payment-radio">
                                                <input type="radio" id="<%= option.id %>" name="paymentMethod" value="<%= option.id %>" <%= option.id === 'razorpay' ? 'checked' : '' %>>
                                                <span class="custom-radio"></span>
                                            </div>
                                            <div class="payment-icon">
                                                <i class="fas <%= option.icon %>"></i>
                                            </div>
                                            <div class="payment-label"><%= option.label %></div>
                                        </div>
                                    <% }) %>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Order Summary-->
                    <div class="checkout-box">
                        <div class="box-header">
                            <h2>Order Summary</h2>
                            <span class="box-badge">Final Step</span>
                        </div>
                        <div class="box-content">
                            <div class="summary-content">
                                <div class="summary-row">
                                    <span class="summary-label">Subtotal (<%= cartItems.reduce((total, item) => total + item.quantity, 0) %> items)</span>
                                    <span class="summary-value" id="subtotal-value">₹<%= cartItems.reduce((sum, item) => sum + (item.basePrice * item.quantity), 0).toFixed(2) %></span>
                                </div>

                                <% 
                                    const offerDiscount = cartItems.reduce((sum, item) => {
                                        if (item.offer) {
                                            return sum + ((item.basePrice * item.offer.percentage / 100) * item.quantity);
                                        }
                                        return sum;
                                    }, 0);
                                %>

                                <% if (offerDiscount > 0) { %>
                                    <div class="summary-row discount-row">
                                        <span class="summary-label">Offer Discount</span>
                                        <span class="summary-value" id="offer-discount-value">-₹<%= offerDiscount.toFixed(2) %></span>
                                    </div>
                                <% } %>

                                <% if (giftWrapTotal > 0) { %>
                                    <div class="summary-row">
                                        <span class="summary-label">Gift Packaging</span>
                                        <span class="summary-value" id="gift-wrap-value">₹<%= giftWrapTotal.toFixed(2) %></span>
                                    </div>
                                <% } %>
                                
                                <div class="coupon-section">
                                    <input type="text" id="couponCode" placeholder="Enter coupon code" <%= appliedCoupon ? 'disabled' : '' %> value="<%= appliedCoupon ? appliedCoupon.code : '' %>">
                                    <% if (appliedCoupon) { %>
                                        <button type="button" class="remove-btn" id="removeCouponBtn">Remove</button>
                                    <% } else { %>
                                        <button type="button" class="apply-btn" id="applyCouponBtn">Apply</button>
                                    <% } %>
                                </div>

                                <% if (appliedCoupon) { %>
                                    <div class="summary-row discount-row">
                                        <span class="summary-label">Coupon Discount (<%= appliedCoupon.code %>)</span>
                                        <span class="summary-value" id="coupon-discount-value">-₹<%= appliedCoupon.discount.toFixed(2) %></span>
                                    </div>
                                    <div class="coupon-applied">
                                        Coupon Applied: <%= appliedCoupon.code %> (-₹<%= appliedCoupon.discount.toFixed(2) %>)
                                    </div>
                                <% } %>

                                <div class="summary-row">
                                    <span class="summary-label">Shipping</span>
                                    <span class="summary-value" id="shipping-value">
                                        <%= shipping === 0 ? 'FREE' : '₹' + shipping.toFixed(2) %>
                                    </span>
                                </div>

                                <% 
                                    const totalSavings = offerDiscount + (appliedCoupon ? appliedCoupon.discount : 0);
                                    const subtotalAfterDiscount = cartItems.reduce((sum, item) => sum + (item.basePrice * item.quantity), 0) - totalSavings;
                                %>

                                <% if (totalSavings > 0) { %>
                                    <div class="savings-row">
                                        <span class="summary-label">Total Savings</span>
                                        <span class="summary-value" id="total-savings-value">₹<%= totalSavings.toFixed(2) %></span>
                                    </div>
                                <% } %>

                                <div class="total-row">
                                    <span class="total-label">Total Payable :</span>
                                    <span class="total-value" id="total-value">₹<%= (subtotalAfterDiscount + shipping + giftWrapTotal).toFixed(2) %></span>
                                </div>

                                <button type="submit" class="checkout-btn" id="proceedToPaymentBtn">
                                    <span class="spinner"></span>
                                    <span class="btn-text">Proceed to Payment</span>
                                </button>

                                <div class="secure-checkout">
                                    <i class="fas fa-lock"></i> Secure Checkout
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </main>

    <!-- Address Modal -->
    <div class="modal-overlay" id="addressModal">
        <div class="modal">
            <div class="modal-header">
                <div class="modal-title" id="modalTitle">Add or Edit Address</div>
                <button class="close-btn" id="closeModalBtn">×</button>
            </div>
            <div class="modal-body">
                <form id="addressForm" action="/address/add" method="POST">
                    <input type="hidden" id="addressId" name="addressId">

                    <div class="form-section">
                        <div class="form-section-header">
                            <div class="form-section-title">Contact Information</div>
                            <div class="required-note">Required Fields*</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="name">Full Name*</label>
                            <input type="text" class="form-control" id="name" name="name" required>
                            <div class="error-message" id="nameError">Please enter the full name.</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="phone">Phone Number *</label>
                            <input type="tel" class="form-control" id="phone" name="phone" required>
                            <div class="error-message" id="phoneError">Please enter a valid phone number.</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="altPhone">Alternate Phone Number *</label>
                            <input type="tel" class="form-control" id="altPhone" name="altPhone" required>
                            <div class="error-message" id="altPhoneError">Please enter a valid alternate phone number.</div>
                        </div>
                    </div>

                    <div class="form-section">
                        <div class="form-section-header">
                            <div class="form-section-title">Address Details</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="addressType">Address Type *</label>
                            <select class="form-control" id="addressType" name="addressType" required>
                                <option value="">Select Address Type</option>
                                <option value="Home">Home</option>
                                <option value="Work">Work</option>
                                <option value="Other">Other</option>
                            </select>
                            <div class="error-message" id="addressTypeError">Please select an address type.</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="landMark">Landmark *</label>
                            <input type="text" class="form-control" id="landMark" name="landMark" required>
                            <div class="error-message" id="landMarkError">Please enter a landmark.</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="city">City *</label>
                            <input type="text" class="form-control" id="city" name="city" required>
                            <div class="error-message" id="cityError">Please enter your city.</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="state">State *</label>
                            <input type="text" class="form-control" id="state" name="state" required>
                            <div class="error-message" id="stateError">Please enter your state.</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="pincode">Pincode *</label>
                            <input type="number" class="form-control" id="pincode" name="pincode" required>
                            <div class="error-message" id="pincodeError">Please enter a valid pincode.</div>
                        </div>
                    </div>

                    <div class="button-group">
                        <button type="button" class="cancel-btn" id="cancelBtn">Cancel</button>
                        <button type="submit" class="save-btn">Save Address</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <%- include("../../views/partials/user/footer") %>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const deliveryOptions = document.querySelectorAll('.delivery-option');
            const paymentOptions = document.querySelectorAll('.payment-option');
            const addressCards = document.querySelectorAll('.address-card');
            const shippingValueElement = document.querySelector('.summary-row[data-type="shipping"] .summary-value');
            const totalValueElement = document.querySelector('.total-value');
            const checkoutForm = document.querySelector('#checkout-form');
            const addressModal = document.getElementById('addressModal');
            const addAddressBtn = document.getElementById('addAddressBtn');
            const addFirstAddressBtn = document.getElementById('addFirstAddressBtn');
            const closeModalBtn = document.getElementById('closeModalBtn');
            const cancelBtn = document.getElementById('cancelBtn');
            const addressForm = document.getElementById('addressForm');
            const proceedToPaymentBtn = document.getElementById('proceedToPaymentBtn');
            const applyCouponBtn = document.getElementById('applyCouponBtn');
            const removeCouponBtn = document.getElementById('removeCouponBtn');
            const couponCodeInput = document.getElementById('couponCode');

            function updateTotals() {
                const selectedDelivery = document.querySelector('input[name="deliveryMethod"]:checked');
                if (!selectedDelivery) return;

                const subtotal = parseFloat(document.getElementById('subtotal-value').textContent.replace('₹', '')) || 0;
                
                const giftWrapTotal = document.getElementById('gift-wrap-value') 
                    ? parseFloat(document.getElementById('gift-wrap-value').textContent.replace('₹', '')) 
                    : 0;
                
                const offerDiscountElement = document.getElementById('offer-discount-value');
                const offerDiscount = offerDiscountElement 
                    ? parseFloat(offerDiscountElement.textContent.replace('-₹', '')) || 0 
                    : 0;
                
                const couponDiscountElement = document.getElementById('coupon-discount-value');
                const couponDiscount = couponDiscountElement 
                    ? parseFloat(couponDiscountElement.textContent.replace('-₹', '')) || 0 
                    : 0;

                const shippingPrice = selectedDelivery.value === 'express' ? 99 : 0;
                const shippingElement = document.getElementById('shipping-value');
                if (shippingElement) {
                    shippingElement.textContent = shippingPrice === 0 ? 'FREE' : `₹${shippingPrice.toFixed(2)}`;
                }

                const totalSavings = offerDiscount + couponDiscount;
                const totalSavingsElement = document.getElementById('total-savings-value');
                if (totalSavingsElement && totalSavings > 0) {
                    totalSavingsElement.textContent = `₹${totalSavings.toFixed(2)}`;
                }

                const subtotalAfterDiscount = subtotal - totalSavings;

                const total = subtotalAfterDiscount + shippingPrice + giftWrapTotal;
                const totalElement = document.getElementById('total-value');
                if (totalElement) {
                    totalElement.textContent = `₹${total.toFixed(2)}`;
                }
            }

            deliveryOptions.forEach(option => {
                option.addEventListener('click', function() {
                    deliveryOptions.forEach(opt => opt.classList.remove('selected'));
                    this.classList.add('selected');
                    const radio = this.querySelector('input[type="radio"]');
                    if (radio) radio.checked = true;
                    updateTotals();
                });
            });

            paymentOptions.forEach(option => {
                option.addEventListener('click', function() {
                    paymentOptions.forEach(opt => opt.classList.remove('selected'));
                    this.classList.add('selected');
                    const radio = this.querySelector('input[type="radio"]');
                    if (radio) radio.checked = true;
                });
            });

            addressCards.forEach(card => {
                card.addEventListener('click', function(e) {
                    if (e.target.classList.contains('address-btn') || e.target.closest('.address-btn')) return;
                    addressCards.forEach(c => c.classList.remove('selected'));
                    this.classList.add('selected');
                    const radio = this.querySelector('input[type="radio"]');
                    if (radio) radio.checked = true;
                });
            });

            function openAddressModal(title) {
                addressModal.classList.add('active');
                document.body.style.overflow = 'hidden';
                document.getElementById('modalTitle').textContent = title;
            }

            function closeAddressModal() {
                addressModal.classList.remove('active');
                document.body.style.overflow = '';
                addressForm.reset();
                const formGroups = addressForm.querySelectorAll('.form-group');
                formGroups.forEach(group => group.classList.remove('invalid'));
            }

            addAddressBtn?.addEventListener('click', () => openAddressModal('Add New Address'));
            addFirstAddressBtn?.addEventListener('click', () => openAddressModal('Add New Address'));
            closeModalBtn?.addEventListener('click', closeAddressModal);
            cancelBtn?.addEventListener('click', closeAddressModal);

            document.querySelectorAll('.edit-address-btn').forEach(btn => {
                btn.addEventListener('click', async () => {
                    const addressId = btn.dataset.id;
                    try {
                        const response = await fetch(`/address/${addressId}`);
                        const address = await response.json();
                        document.getElementById('modalTitle').textContent = 'Edit Address';
                        addressForm.action = `/address/edit/${addressId}`;
                        document.getElementById('addressId').value = addressId;
                        document.getElementById('name').value = address.name;
                        document.getElementById('phone').value = address.phone;
                        document.getElementById('altPhone').value = address.altPhone;
                        document.getElementById('addressType').value = address.addressType;
                        document.getElementById('landMark').value = address.landMark;
                        document.getElementById('city').value = address.city;
                        document.getElementById('state').value = address.state;
                        document.getElementById('pincode').value = address.pincode;
                        addressModal.classList.add('active');
                        document.body.style.overflow = 'hidden';
                    } catch (error) {
                        Toastify({
                            text: 'Failed to load address details.',
                            duration: 3000,
                            gravity: 'top',
                            position: 'right',
                            backgroundColor: '#dc3545',
                            stopOnFocus: true
                        }).showToast();
                    }
                });
            });

            function validateAddressForm() {
                let isValid = true;
                const fields = [
                    { id: 'name', errorId: 'nameError', message: 'Please enter the full name.' },
                    { id: 'phone', errorId: 'phoneError', message: 'Please enter a valid phone number.', pattern: /^\+?[6-9][\d\s-]{9,}$/ },
                    { id: 'altPhone', errorId: 'altPhoneError', message: 'Please enter a valid alternate phone number.', pattern: /^\+?[6-9][\d\s-]{9,}$/ },
                    { id: 'addressType', errorId: 'addressTypeError', message: 'Please select an address type.' },
                    { id: 'landMark', errorId: 'landMarkError', message: 'Please enter a landmark.' },
                    { id: 'city', errorId: 'cityError', message: 'Please enter your city.' },
                    { id: 'state', errorId: 'stateError', message: 'Please enter your state.' },
                    { id: 'pincode', errorId: 'pincodeError', message: 'Please enter a valid pincode.', pattern: /^[0-9]{6}$/ }
                ];

                fields.forEach(field => {
                    const input = document.getElementById(field.id);
                    const formGroup = input.closest('.form-group');
                    const errorElement = document.getElementById(field.errorId);

                    if (!input.value.trim() || (field.pattern && !field.pattern.test(input.value))) {
                        formGroup.classList.add('invalid');
                        errorElement.textContent = field.message;
                        isValid = false;
                    } else {
                        formGroup.classList.remove('invalid');
                    }
                });

                return isValid;
            }

            addressForm?.addEventListener('submit', async (e) => {
                e.preventDefault();
                if (!validateAddressForm()) return;

                try {
                    const formData = new FormData(addressForm);
                    const data = Object.fromEntries(formData);
                    const mappedData = {
                        addressType: data.addressType,
                        name: data.name,
                        landMark: data.landMark,
                        city: data.city,
                        state: data.state,
                        pincode: data.pincode,
                        phone: data.phone,
                        altPhone: data.altPhone
                    };

                    const response = await fetch(addressForm.action, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(mappedData)
                    });

                    const result = await response.json();
                    if (response.ok) {
                        Toastify({
                            text: result.message || 'Address saved successfully!',
                            duration: 2000,
                            gravity: 'top',
                            position: 'right',
                            backgroundColor: '#28a745',
                            stopOnFocus: true
                        }).showToast();
                        setTimeout(() => {
                            window.location.reload();
                        }, 2000);
                    } else {
                        Toastify({
                            text: result.message || 'Failed to save address.',
                            duration: 3000,
                            gravity: 'top',
                            position: 'right',
                            backgroundColor: '#dc3545',
                            stopOnFocus: true
                        }).showToast();
                    }
                } catch (error) {
                    Toastify({
                        text: 'An error occurred while saving the address.',
                        duration: 3000,
                        gravity: 'top',
                        position: 'right',
                        backgroundColor: '#dc3545',
                        stopOnFocus: true
                    }).showToast();
                }
            });

            applyCouponBtn?.addEventListener('click', async () => {
                const couponCode = couponCodeInput.value.trim().toUpperCase();
                if (!couponCode) {
                    Toastify({
                        text: 'Please enter a coupon code.',
                        duration: 3000,
                        gravity: 'top',
                        position: 'right',
                        backgroundColor: '#dc3545',
                        stopOnFocus: true
                    }).showToast();
                    return;
                }

                try {
                    const response = await fetch('/cart/apply-coupon', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ couponCode })
                    });
                    const result = await response.json();
                    if (result.success) {
                        Toastify({
                            text: result.message,
                            duration: 2000,
                            gravity: 'top',
                            position: 'right',
                            backgroundColor: '#28a745',
                            stopOnFocus: true
                        }).showToast();
                        setTimeout(() => {
                            window.location.reload();
                        }, 2000);
                    } else {
                        Toastify({
                            text: result.message || 'Failed to apply coupon.',
                            duration: 3000,
                            gravity: 'top',
                            position: 'right',
                            backgroundColor: '#dc3545',
                            stopOnFocus: true
                        }).showToast();
                    }
                } catch (error) {
                    Toastify({
                        text: 'Error applying coupon.',
                        duration: 3000,
                        gravity: 'top',
                        position: 'right',
                        backgroundColor: '#dc3545',
                        stopOnFocus: true
                    }).showToast();
                }
            });

            removeCouponBtn?.addEventListener('click', async () => {
                try {
                    const response = await fetch('/cart/remove-coupon', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' }
                    });
                    const result = await response.json();
                    if (result.success) {
                        Toastify({
                            text: result.message,
                            duration: 2000,
                            gravity: 'top',
                            position: 'right',
                            backgroundColor: '#28a745',
                            stopOnFocus: true
                        }).showToast();
                        setTimeout(() => {
                            window.location.reload();
                        }, 2000);
                    } else {
                        Toastify({
                            text: result.message || 'Failed to remove coupon.',
                            duration: 3000,
                            gravity: 'top',
                            position: 'right',
                            backgroundColor: '#dc3545',
                            stopOnFocus: true
                        }).showToast();
                    }
                } catch (error) {
                    Toastify({
                        text: 'Error removing coupon.',
                        duration: 3000,
                        gravity: 'top',
                        position: 'right',
                        backgroundColor: '#dc3545',
                        stopOnFocus: true
                    }).showToast();
                }
            });

            async function initializeRazorpayPayment(orderData) {
                const options = {
                    key: orderData.key_id,
                    amount: Math.round(orderData.order.amount),
                    currency: orderData.order.currency,
                    name: 'Luxe Fashion Store',
                    description: 'Fashion Purchase',
                    order_id: orderData.order.id,
                    handler: async function (response) {
                        try {
                            const verificationResponse = await fetch('/checkout/verify-payment', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({
                                    razorpay_payment_id: response.razorpay_payment_id,
                                    razorpay_order_id: response.razorpay_order_id,
                                    razorpay_signature: response.razorpay_signature,
                                    dbOrderId: orderData.order.dbOrderId
                                })
                            });

                            const result = await verificationResponse.json();
                            if (result.success) {
                                showToast('Payment successful!', 'success');
                                setTimeout(() => {
                                    window.location.href = result.redirect;
                                }, 2000);
                            } else {
                                showToast(result.message || 'Payment verification failed', 'error');
                                setTimeout(() => {
                                    window.location.href = '/checkout/payment-failed';
                                }, 2000);
                            }
                        } catch (error) {
                            console.error('Payment verification failed:', error);
                            showToast('Payment verification failed. Please try again.', 'error');
                            setTimeout(() => {
                                window.location.href = '/checkout/payment-failed';
                            }, 2000);
                        } finally {
                            proceedToPaymentBtn.classList.remove('loading');
                            proceedToPaymentBtn.disabled = false;
                        }
                    },
                    modal: {
                        ondismiss: function () {
                            proceedToPaymentBtn.classList.remove('loading');
                            proceedToPaymentBtn.disabled = false;
                            window.location.href = '/checkout/payment-failed?error=Payment cancelled by user';
                        }
                    },
                    prefill: {
                        name: '<%= user.firstName %> <%= user.lastName %>',
                        email: '<%= user.email %>'
                    },
                    theme: {
                        color: '#8a6a94'
                    }
                };

                const rzp = new Razorpay(options);
                rzp.open();

                rzp.on('payment.failed', function (response) {
                    console.error('Payment failed:', response.error);
                    showToast('Payment failed: ' + response.error.description, 'error');
                    proceedToPaymentBtn.classList.remove('loading');
                    proceedToPaymentBtn.disabled = false;
                    setTimeout(() => {
                        window.location.href = `/checkout/payment-failed?error=${encodeURIComponent(response.error.description)}`;
                    }, 2000);
                });
            }


            function showToast(message, type = 'success') {
                Toastify({
                    text: message,
                    duration: 3000,
                    gravity: 'top',
                    position: 'right',
                    backgroundColor: type === 'success' ? '#28a745' : '#dc3545',
                    stopOnFocus: true
                }).showToast();
            }

            checkoutForm?.addEventListener('submit', async function(e) {
                e.preventDefault();

                const addressSelected = document.querySelector('input[name="addressId"]:checked');
                if (!addressSelected) {
                    showToast('Please select a shipping address.', 'error');
                    return;
                }

                const deliveryMethod = document.querySelector('input[name="deliveryMethod"]:checked');
                if (!deliveryMethod) {
                    showToast('Please select a delivery method.', 'error');
                    return;
                }

                const paymentMethod = document.querySelector('input[name="paymentMethod"]:checked');
                if (!paymentMethod) {
                    showToast('Please select a payment method.', 'error');
                    return;
                }

                proceedToPaymentBtn.classList.add('loading');
                proceedToPaymentBtn.disabled = true;

                try {
                    const data = {
                        addressId: addressSelected.value,
                        deliveryMethod: deliveryMethod.value,
                        paymentMethod: paymentMethod.value
                    };

                    const response = await fetch('/checkout/process', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(data)
                    });

                    const result = await response.json();
                    if (result.success) {
                        if (result.paymentMethod === 'razorpay') {
                            await initializeRazorpayPayment(result);
                        } else {
                            showToast('Order placed successfully!', 'success');
                            setTimeout(() => {
                                window.location.href = result.redirect;
                            }, 2000);
                        }
                    } else {
                        throw new Error(result.message || 'Failed to process order');
                    }
                } catch (error) {
                    console.error('Error processing order:', error);
                    showToast(error.message || 'An error occurred. Please try again.', 'error');
                    proceedToPaymentBtn.classList.remove('loading');
                    proceedToPaymentBtn.disabled = false;
                }
            });

            updateTotals();
        });
    </script>
</body>
</html>