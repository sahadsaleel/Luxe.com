<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/checkout.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <style>
        /* Loading spinner styles */
        .checkout-btn {
            position: relative;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }
        .checkout-btn .spinner {
            display: none;
            width: 20px;
            height: 20px;
            border: 2px solid #fff;
            border-top: 2px solid transparent;
            border-radius: 50%;
            animation: spin 0.8s linear infinite;
            margin-right: 8px;
        }
        .checkout-btn.loading .spinner {
            display: inline-block;
        }
        .checkout-btn.loading .btn-text {
            visibility: hidden;
        }
        .checkout-btn.loading {
            pointer-events: none;
            opacity: 0.7;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <%- include('../../views/partials/user/header') %>

    <div class="breadcrumb-container">
        <div class="container">
            <ol class="breadcrumb">
                <li class="breadcrumb-item"><a href="/">Home</a></li>
                <li class="breadcrumb-item"><a href="/cart">Shopping Bag</a></li>
                <li class="breadcrumb-item active">Checkout</li>
            </ol>
        </div>
    </div>

    <main class="checkout-section">
        <div class="container">
            <h1 class="section-title">Checkout</h1>

            <div class="checkout-progress">
                <div class="progress-step completed">
                    1
                    <span class="progress-step-label">Cart</span>
                </div>
                <div class="progress-step active">
                    2
                    <span class="progress-step-label">Checkout</span>
                </div>
                <div class="progress-step">
                    3
                    <span class="progress-step-label">Payment</span>
                </div>
                <div class="progress-step">
                    4
                    <span class="progress-step-label">Complete</span>
                </div>
            </div>

            <form id="checkout-form">
                <div class="checkout-container">
                    <div class="checkout-details">
                        <!-- Shipping Address -->
                        <div class="checkout-box">
                            <div class="box-header">
                                <h2>Shipping Address</h2>
                                <span class="box-badge">Step 1 of 3</span>
                            </div>
                            <div class="box-content">
                                <% if (addresses.length > 0) { %>
                                    <% addresses.forEach((address, index) => { %>
                                        <div class="address-card <%= index === 0 ? 'selected' : '' %>">
                                            <input type="radio" name="addressId" value="<%= address._id %>" <%= index === 0 ? 'checked' : '' %> hidden>
                                            <div class="address-tag"><%= address.addressType %></div>
                                            <h3><%= address.name %></h3>
                                            <div class="address-details">
                                                <%= address.landMark %><br>
                                                <%= address.city %>, <%= address.state %> <%= address.pincode %><br>
                                                Phone: <%= address.phone %><br>
                                                Alternate Phone: <%= address.altPhone %>
                                            </div>
                                            <div class="address-actions">
                                                <button type="button" class="address-btn edit-address-btn" data-id="<%= address._id %>">
                                                    <i class="fas fa-edit"></i> Edit
                                                </button>
                                            </div>
                                        </div>
                                    <% }) %>
                                <% } else { %>
                                    <div class="no-addresses">
                                        <i class="fas fa-map-marker-alt"></i>
                                        <h3>No addresses found</h3>
                                        <p>Please add a shipping address to proceed.</p>
                                        <button type="button" class="add-first-address-btn" id="addFirstAddressBtn">
                                            <i class="fas fa-plus"></i> Add your first address
                                        </button>
                                    </div>
                                <% } %>
                                <button type="button" class="add-address-btn" id="addAddressBtn">
                                    <i class="fas fa-plus"></i> Add New Address
                                </button>
                            </div>
                        </div>

                        <!-- Delivery Method -->
                        <div class="checkout-box">
                            <div class="box-header">
                                <h2>Delivery Method</h2>
                                <span class="box-badge">Step 2 of 3</span>
                            </div>
                            <div class="box-content">
                                <div class="delivery-options">
                                    <% deliveryOptions.forEach(option => { %>
                                        <div class="delivery-option <%= option.id === 'standard' ? 'selected' : '' %>">
                                            <div class="delivery-radio">
                                                <input type="radio" id="<%= option.id %>-delivery" name="deliveryMethod" value="<%= option.id %>" <%= option.id === 'standard' ? 'checked' : '' %>>
                                                <span class="custom-radio"></span>
                                            </div>
                                            <div class="delivery-info">
                                                <div class="delivery-title"><%= option.title %></div>
                                                <div class="delivery-description"><%= option.description %></div>
                                            </div>
                                            <div class="delivery-price"><%= option.price === 0 ? 'FREE' : '₹' + option.price %></div>
                                        </div>
                                    <% }) %>
                                </div>
                            </div>
                        </div>

                        <!-- Payment Method -->
                        <div class="checkout-box">
                            <div class="box-header">
                                <h2>Payment Method</h2>
                                <span class="box-badge">Step 3 of 3</span>
                            </div>
                            <div class="box-content">
                                <div class="payment-options">
                                    <% paymentOptions.forEach(option => { %>
                                        <div class="payment-option <%= option.id === 'razorpay' ? 'selected' : '' %>">
                                            <div class="payment-radio">
                                                <input type="radio" id="<%= option.id %>" name="paymentMethod" value="<%= option.id %>" <%= option.id === 'razorpay' ? 'checked' : '' %>>
                                                <span class="custom-radio"></span>
                                            </div>
                                            <div class="payment-icon">
                                                <i class="fas <%= option.icon %>"></i>
                                            </div>
                                            <div class="payment-label"><%= option.label %></div>
                                        </div>
                                    <% }) %>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Order Summary -->
                    <div class="checkout-summary">
                        <h3 class="summary-title">Order Summary</h3>

                        <div class="product-list">
                            <% cartItems.forEach(item => { %>
                                <div class="product-item">
                                    <div class="product-image">
                                        <img src="<%= item.productImage %>" alt="<%= item.productName %>">
                                    </div>
                                    <div class="product-details">
                                        <h4 class="product-title"><%= item.productName %></h4>
                                        <div class="product-subtitle">
                                            Variant: <%= item.variant.size %>
                                            <% if (item.isGiftWrapped) { %>
                                                | Gift Wrapped (+450₹)
                                            <% } %>
                                        </div>
                                        <div>
                                            <span class="product-price">₹<%= item.price.toFixed(2) %></span>
                                            <span class="product-quantity">× <%= item.quantity %></span>
                                        </div>
                                    </div>
                                </div>
                            <% }) %>
                        </div>

                        <div class="summary-row" data-type="subtotal">
                            <span class="summary-label">Subtotal (<%= cartItems.length %> items)</span>
                            <span class="summary-value">₹<%= parseFloat(subtotal).toFixed(2) %></span>
                        </div>

                        <% if (parseFloat(giftWrapTotal) > 0) { %>
                            <div class="summary-row" data-type="gift-wrapping">
                                <span class="summary-label">Gift Packaging</span>
                                <span class="summary-value">₹<%= parseFloat(giftWrapTotal).toFixed(2) %></span>
                            </div>
                        <% } %>

                        <div class="summary-row" data-type="shipping">
                            <span class="summary-label">Shipping</span>
                            <span class="summary-value <%= parseFloat(shipping) === 0 ? 'summary-discount' : '' %>">
                                <%= parseFloat(shipping) === 0 ? 'FREE' : '₹' + parseFloat(shipping).toFixed(2) %>
                            </span>
                        </div>

                        <div class="total-row">
                            <span class="total-label">Total Payable</span>
                            <span class="total-value">₹<%= parseFloat(total).toFixed(2) %></span>
                        </div>

                        <button type="submit" class="checkout-btn" id="proceedToPaymentBtn">
                            <span class="spinner"></span>
                            <span class="btn-text">Proceed to Payment</span>
                        </button>

                        <div class="secure-checkout">
                            <i class="fas fa-lock"></i> Secure Checkout
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </main>

    <!-- Address Modal -->
    <div class="modal-overlay" id="addressModal">
        <div class="modal">
            <div class="modal-header">
                <div class="modal-title" id="modalTitle">Add or Edit Address</div>
                <button class="close-btn" id="closeModalBtn">×</button>
            </div>
            <div class="modal-body">
                <form id="addressForm" action="/address/add" method="POST">
                    <input type="hidden" id="addressId" name="addressId">

                    <div class="form-section">
                        <div class="form-section-header">
                            <div class="form-section-title">Contact Information</div>
                            <div class="required-note">Required Fields*</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="name">Full Name*</label>
                            <input type="text" class="form-control" id="name" name="name" required>
                            <div class="error-message" id="nameError">Please enter the full name.</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="phone">Phone Number *</label>
                            <input type="tel" class="form-control" id="phone" name="phone" required>
                            <div class="error-message" id="phoneError">Please enter a valid phone number.</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="altPhone">Alternate Phone Number *</label>
                            <input type="tel" class="form-control" id="altPhone" name="altPhone" required>
                            <div class="error-message" id="altPhoneError">Please enter a valid alternate phone number.</div>
                        </div>
                    </div>

                    <div class="form-section">
                        <div class="form-section-header">
                            <div class="form-section-title">Address Details</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="addressType">Address Type *</label>
                            <select class="form-control" id="addressType" name="addressType" required>
                                <option value="">Select Address Type</option>
                                <option value="Home">Home</option>
                                <option value="Work">Work</option>
                                <option value="Other">Other</option>
                            </select>
                            <div class="error-message" id="addressTypeError">Please select an address type.</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="landMark">Landmark *</label>
                            <input type="text" class="form-control" id="landMark" name="landMark" required>
                            <div class="error-message" id="landMarkError">Please enter a landmark.</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="city">City *</label>
                            <input type="text" class="form-control" id="city" name="city" required>
                            <div class="error-message" id="cityError">Please enter your city.</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="state">State *</label>
                            <input type="text" class="form-control" id="state" name="state" required>
                            <div class="error-message" id="stateError">Please enter your state.</div>
                        </div>

                        <div class="form-group">
                            <label class="form-label" for="pincode">Pincode *</label>
                            <input type="number" class="form-control" id="pincode" name="pincode" required>
                            <div class="error-message" id="pincodeError">Please enter a valid pincode.</div>
                        </div>
                    </div>

                    <div class="button-group">
                        <button type="button" class="cancel-btn" id="cancelBtn">Cancel</button>
                        <button type="submit" class="save-btn">Save Address</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <%- include("../../views/partials/user/footer") %>
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const deliveryOptions = document.querySelectorAll('.delivery-option');
            const paymentOptions = document.querySelectorAll('.payment-option');
            const addressCards = document.querySelectorAll('.address-card');
            const shippingValueElement = document.querySelector('.summary-row[data-type="shipping"] .summary-value');
            const totalValueElement = document.querySelector('.total-value');
            const checkoutForm = document.querySelector('#checkout-form');
            const addressModal = document.getElementById('addressModal');
            const addAddressBtn = document.getElementById('addAddressBtn');
            const addFirstAddressBtn = document.getElementById('addFirstAddressBtn');
            const closeModalBtn = document.getElementById('closeModalBtn');
            const cancelBtn = document.getElementById('cancelBtn');
            const addressForm = document.getElementById('addressForm');
            const proceedToPaymentBtn = document.getElementById('proceedToPaymentBtn');

            deliveryOptions.forEach(option => {
                option.addEventListener('click', function() {
                    deliveryOptions.forEach(opt => opt.classList.remove('selected'));
                    this.classList.add('selected');
                    const radio = this.querySelector('input[type="radio"]');
                    if (radio) radio.checked = true;
                    updateTotals();
                });
            });

            paymentOptions.forEach(option => {
                option.addEventListener('click', function() {
                    paymentOptions.forEach(opt => opt.classList.remove('selected'));
                    this.classList.add('selected');
                    const radio = this.querySelector('input[type="radio"]');
                    if (radio) radio.checked = true;
                });
            });

            addressCards.forEach(card => {
                card.addEventListener('click', function(e) {
                    if (e.target.classList.contains('address-btn') || e.target.closest('.address-btn')) return;
                    addressCards.forEach(c => c.classList.remove('selected'));
                    this.classList.add('selected');
                    const radio = this.querySelector('input[type="radio"]');
                    if (radio) radio.checked = true;
                });
            });

            function openAddressModal(title) {
                addressModal.classList.add('active');
                document.body.style.overflow = 'hidden';
                document.getElementById('modalTitle').textContent = title;
            }

            function closeAddressModal() {
                addressModal.classList.remove('active');
                document.body.style.overflow = '';
                addressForm.reset();
                const formGroups = addressForm.querySelectorAll('.form-group');
                formGroups.forEach(group => group.classList.remove('invalid'));
            }

            addAddressBtn?.addEventListener('click', () => openAddressModal('Add New Address'));
            addFirstAddressBtn?.addEventListener('click', () => openAddressModal('Add New Address'));
            closeModalBtn?.addEventListener('click', closeAddressModal);
            cancelBtn?.addEventListener('click', closeAddressModal);

            document.querySelectorAll('.edit-address-btn').forEach(btn => {
                btn.addEventListener('click', async () => {
                    const addressId = btn.dataset.id;
                    try {
                        const response = await fetch(`/address/${addressId}`);
                        const address = await response.json();
                        document.getElementById('modalTitle').textContent = 'Edit Address';
                        addressForm.action = `/address/edit/${addressId}`;
                        document.getElementById('addressId').value = addressId;
                        document.getElementById('name').value = address.name;
                        document.getElementById('phone').value = address.phone;
                        document.getElementById('altPhone').value = address.altPhone;
                        document.getElementById('addressType').value = address.addressType;
                        document.getElementById('landMark').value = address.landMark;
                        document.getElementById('city').value = address.city;
                        document.getElementById('state').value = address.state;
                        document.getElementById('pincode').value = address.pincode;
                        addressModal.classList.add('active');
                        document.body.style.overflow = 'hidden';
                    } catch (error) {
                        Toastify({
                            text: 'Failed to load address details.',
                            duration: 3000,
                            gravity: 'top',
                            position: 'right',
                            backgroundColor: '#dc3545',
                            stopOnFocus: true
                        }).showToast();
                    }
                });
            });

            function validateAddressForm() {
                let isValid = true;
                const fields = [
                    { id: 'name', errorId: 'nameError', message: 'Please enter the full name.' },
                    { id: 'phone', errorId: 'phoneError', message: 'Please enter a valid phone number.', pattern: /^\+?[6-9][\d\s-]{9,}$/ },
                    { id: 'altPhone', errorId: 'altPhoneError', message: 'Please enter a valid alternate phone number.', pattern: /^\+?[6-9][\d\s-]{9,}$/ },
                    { id: 'addressType', errorId: 'addressTypeError', message: 'Please select an address type.' },
                    { id: 'landMark', errorId: 'landMarkError', message: 'Please enter a landmark.' },
                    { id: 'city', errorId: 'cityError', message: 'Please enter your city.' },
                    { id: 'state', errorId: 'stateError', message: 'Please enter your state.' },
                    { id: 'pincode', errorId: 'pincodeError', message: 'Please enter a valid pincode.', pattern: /^[0-9]{6}$/ }
                ];

                fields.forEach(field => {
                    const input = document.getElementById(field.id);
                    const formGroup = input.closest('.form-group');
                    const errorElement = document.getElementById(field.errorId);

                    if (!input.value.trim() || (field.pattern && !field.pattern.test(input.value))) {
                        formGroup.classList.add('invalid');
                        errorElement.textContent = field.message;
                        isValid = false;
                    } else {
                        formGroup.classList.remove('invalid');
                    }
                });

                return isValid;
            }

            addressForm?.addEventListener('submit', async (e) => {
                e.preventDefault();
                if (!validateAddressForm()) return;

                try {
                    const formData = new FormData(addressForm);
                    const data = Object.fromEntries(formData);
                    const mappedData = {
                        addressType: data.addressType,
                        name: data.name,
                        landMark: data.landMark,
                        city: data.city,
                        state: data.state,
                        pincode: data.pincode,
                        phone: data.phone,
                        altPhone: data.altPhone
                    };

                    const response = await fetch(addressForm.action, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(mappedData)
                    });

                    const result = await response.json();
                    if (response.ok) {
                        Toastify({
                            text: result.message || 'Address saved successfully!',
                            duration: 2000,
                            gravity: 'top',
                            position: 'right',
                            backgroundColor: '#28a745',
                            stopOnFocus: true
                        }).showToast();
                        setTimeout(() => {
                            window.location.reload();
                        }, 2000);
                    } else {
                        Toastify({
                            text: result.message || 'Failed to save address.',
                            duration: 3000,
                            gravity: 'top',
                            position: 'right',
                            backgroundColor: '#dc3545',
                            stopOnFocus: true
                        }).showToast();
                    }
                } catch (error) {
                    Toastify({
                        text: 'An error occurred while saving the address.',
                        duration: 3000,
                        gravity: 'top',
                        position: 'right',
                        backgroundColor: '#dc3545',
                        stopOnFocus: true
                    }).showToast();
                }
            });

            function updateTotals() {
                const selectedDelivery = document.querySelector('input[name="deliveryMethod"]:checked');
                const deliveryOptions = <%- JSON.stringify(deliveryOptions || []) %>;
                const subtotal = Number(<%- subtotal || 0 %>);
                const giftWrapTotal = Number(<%- giftWrapTotal || 0 %>);

                if (!selectedDelivery || !shippingValueElement || !totalValueElement) {
                    console.warn('Missing delivery selection or DOM elements');
                    return;
                }

                const selectedOption = deliveryOptions.find(opt => opt.id === selectedDelivery.value);
                const shippingPrice = selectedOption ? selectedOption.price : 0;
                const total = subtotal + giftWrapTotal + shippingPrice;

                shippingValueElement.innerHTML = shippingPrice === 0 ? 'FREE' : `₹${shippingPrice.toFixed(2)}`;
                totalValueElement.innerHTML = `₹${total.toFixed(2)}`;
            }

            checkoutForm?.addEventListener('submit', async function(e) {
                e.preventDefault();
                const addressSelected = document.querySelector('input[name="addressId"]:checked');
                if (!addressSelected) {
                    Toastify({
                        text: 'Please select a shipping address.',
                        duration: 3000,
                        gravity: 'top',
                        position: 'right',
                        backgroundColor: '#dc3545',
                        stopOnFocus: true
                    }).showToast();
                    return;
                }

                proceedToPaymentBtn.classList.add('loading');
                proceedToPaymentBtn.disabled = true;

                try {
                    const formData = new FormData(checkoutForm);
                    const data = {
                        addressId: formData.get('addressId'),
                        deliveryMethod: formData.get('deliveryMethod'),
                        paymentMethod: formData.get('paymentMethod')
                    };

                    const response = await fetch('/checkout/submit', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });

                    const result = await response.json();
                    if (result.success) {
                        Toastify({
                            text: 'Order placed successfully!',
                            duration: 2000,
                            gravity: 'top',
                            position: 'right',
                            backgroundColor: '#28a745',
                            stopOnFocus: true
                        }).showToast();
                        setTimeout(() => {
                            window.location.href = `/order-success?orderId=${result.orderId}`;
                        }, 2000);
                    } else {
                        Toastify({
                            text: result.message || 'Failed to place order.',
                            duration: 3000,
                            gravity: 'top',
                            position: 'right',
                            backgroundColor: '#dc3545',
                            stopOnFocus: true
                        }).showToast();
                        proceedToPaymentBtn.classList.remove('loading');
                        proceedToPaymentBtn.disabled = false;
                    }
                } catch (error) {
                    console.error('Error submitting checkout:', error);
                    Toastify({
                        text: 'An error occurred. Please try again.',
                        duration: 3000,
                        gravity: 'top',
                        position: 'right',
                        backgroundColor: '#dc3545',
                        stopOnFocus: true
                    }).showToast();
                    proceedToPaymentBtn.classList.remove('loading');
                    proceedToPaymentBtn.disabled = false;
                }
            });

            updateTotals();
        });
    </script>
</body>
</html>