<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/adminDashboard.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <title>Admin Order Management</title>
    <link rel="stylesheet" href="/css/adminOrder.css">
</head>
<body>
    <%- include('../../views/partials/admin/header') %>
    <div class="container">
        <div class="search-filter">
            <input type="text" class="search-bar" id="searchInput" placeholder="Search for product...">
            <div class="dropdown">
                <select class="custom-select" id="sortSelect">
                    <option value="newest">Newest</option>
                    <option value="oldest">Oldest</option>
                    <option value="a-z">A-Z</option>
                    <option value="z-a">Z-A</option>
                </select>
            </div>
        </div>
        
        <table id="orderTable">
            <thead>
                <tr>
                    <th>USER NAME</th>
                    <th>ORDER ID</th>
                    <th>AMOUNT</th>
                    <th>ORDER DATE</th>
                    <th>STATUS</th>
                    <th>ACTION</th>
                </tr>
            </thead>
            <tbody>
                <% orders.forEach(order => { %>
                    <tr>
                        <td><%= order.user ? order.user.firstName + ' ' + order.user.lastName : 'N/A' %></td>
                        <td><%= order.orderId %></td>
                        <td>₹<%= (order.finalAmount || 0).toFixed(2) %></td>
                        <td><%= (order.invoiceDate || order.createdOn).toISOString().slice(0, 10) %></td>
                        <td>
                            <span class="status-badge <%= order.status.toLowerCase().replace(' ', '-') %>">
                                <%= order.status %>
                            </span>
                        </td>
                        <td class="action-icon">
                            <a href="/admin/orders/<%= order._id %>" class="view-button">View</a>
                        </td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </div>
    <%- include('../../views/partials/admin/footer') %>
   <script>
    document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.getElementById('searchInput');
        const sortSelect = document.getElementById('sortSelect');
        const table = document.getElementById('orderTable');
        const tbody = table.querySelector('tbody');
        const originalRows = Array.from(tbody.querySelectorAll('tr'));

        const getRowData = row => {
            return {
                row,
                userName: row.cells[0].textContent.trim().toLowerCase(),
                orderId: row.cells[1].textContent.trim().toLowerCase(),
                amount: parseFloat(row.cells[2].textContent.replace('₹', '').trim()),
                orderDate: new Date(row.cells[3].textContent.trim()),
                status: row.cells[4].textContent.trim().toLowerCase()
            };
        };

        let rowData = originalRows.map(getRowData);

        searchInput.addEventListener('input', () => {
            const query = searchInput.value.trim().toLowerCase();
            rowData = originalRows.map(getRowData); 
            const filteredRows = rowData.filter(data => 
                data.userName.includes(query) ||
                data.orderId.includes(query) ||
                data.status.includes(query)
            );
            updateTable(filteredRows);
        });

        sortSelect.addEventListener('change', () => {
            let sortedRows = [...rowData];
            switch (sortSelect.value) {
                case 'newest':
                    sortedRows.sort((a, b) => b.orderDate - a.orderDate);
                    break;
                case 'oldest':
                    sortedRows.sort((a, b) => a.orderDate - b.orderDate);
                    break;
                case 'a-z':
                    sortedRows.sort((a, b) => a.userName.localeCompare(b.userName));
                    break;
                case 'z-a':
                    sortedRows.sort((a, b) => b.userName.localeCompare(a.userName));
                    break;
            }
            updateTable(sortedRows);
        });
        
        function updateTable(rows) {
            tbody.innerHTML = '';
            rows.forEach(data => tbody.appendChild(data.row));
        }
    });
    </script>
    
</body>
</html>
