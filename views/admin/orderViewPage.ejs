<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Order Detail Page</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <link rel="stylesheet" href="/css/adminOrderViewPage.css">
</head>
<body>
    <div class="container">
        <div class="dashboard-header">
            <div class="logo-container">
                <img src="/img/logo.png" alt="Logo" class="logo">
                <div class="dropdown">
                    <button class="dropdown-toggle">Menu ‚ñº</button>
                    <div class="dropdown-menu">
                        <a href="/admin/orders" class="dropdown-item">Back to Orders</a>
                    </div>
                </div>
            </div>
            <h1 class="page-title">Order Details</h1>
        </div>
        
        <div class="card">
            <div class="card-header">
                <div class="card-title">
                    <span class="card-title-icon">üìã</span>
                    Order Information
                </div>
                <div class="status-wrapper">
                    <select class="select-status" name="status">
                        <option value="Pending" <%= order.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                        <option value="Processing" <%= order.status === 'Processing' ? 'selected' : '' %>>Processing</option>
                        <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                        <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                        <option value="Canceled" <%= order.status === 'Canceled' ? 'selected' : '' %>>Canceled</option>
                        <option value="Return Request" <%= order.status === 'Return Request' ? 'selected' : '' %>>Return Request</option>
                        <option value="Return Approved" <%= order.status === 'Return Approved' ? 'selected' : '' %>>Return Approved</option>
                    </select>
                    <button class="btn btn-primary update-btn" data-order-id="<%= order._id %>">
                        <span class="button-icon">‚úì</span>
                        Update Status
                    </button>
                </div>
            </div>
            <div class="card-body">
                <div class="info-grid">
                    <div class="info-item">
                        <div class="info-label">Order ID</div>
                        <div class="info-value"><%= order.orderId %></div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">Customer Name</div>
                        <div class="info-value"><%= order.user ? order.user.firstName + (order.user.lastName ? ' ' + order.user.lastName : '') : 'N/A' %></div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">Order Date</div>
                        <div class="info-value"><%= order.orderDate %></div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">Phone</div>
                        <div class="info-value"><%= order.address.phone || 'N/A' %></div>
                    </div>
                    <div class="info-item">
                        <div class="info-label">Alternative Phone</div>
                        <div class="info-value"><%= order.address.altPhone || 'N/A' %></div>
                    </div>
                </div>
                
                <div class="address-box">
                    <div class="address-icon">üìç</div>
                    <div class="info-label">Shipping Address</div>
                    <div class="info-value">
                        <%= order.address.name ? order.address.name + ', ' : '' %>
                        <%= order.address.landMark ? order.address.landMark + ', ' : '' %>
                        <%= order.address.city ? order.address.city + ', ' : '' %>
                        <%= order.address.state ? order.address.state + ' - ' : '' %>
                        <%= order.address.pincode || 'N/A' %>
                    </div>
                </div>

                <% if (order.status === 'Return Requested' || order.status === 'Return Approved' ) { %>
                    <div class="return-request-box">
                        <div class="return-icon">‚Ü©Ô∏è</div>
                        <div class="info-label">Return Request Details</div>
                        <div class="info-grid">
                            <div class="info-item">
                                <div class="info-label">Requested On</div>
                                <div class="info-value"><%= order.returnRequestedOn ? order.returnRequestedOn.toLocaleDateString() : 'N/A' %></div>
                            </div>
                            <div class="info-item">
                                <div class="info-label">Reason</div>
                                <div class="info-value"><%= order.returnReason || 'N/A' %></div>
                            </div>
                            <div class="info-item">
                                <div class="info-label">Comments</div>
                                <div class="info-value"><%= order.returnComments || 'N/A' %></div>
                            </div>
                            <% if (order.status === 'Return Requested') { %>
                                <div class="info-item">
                                    <select name="returnStatus" id="returnStatus">
                                        <option value="" selected>Select status</option>
                                        <option value="approved">Approved</option>
                                        <option value="rejected">Rejected</option>
                                    </select>
                                    <button class="btn btn-primary approve-return-btn" data-order-id="<%= order._id %>">
                                        <span class="button-icon">‚úì</span>
                                        Process Status
                                    </button>
                                </div>
                            <% } %>
                        </div>
                    </div>
                <% } %>
            </div>
        </div>
        
        <div class="card">
            <div class="card-header">
                <div class="card-title">
                    <span class="card-title-icon">üõí</span>
                    Order Items
                </div>
            </div>
            <div class="card-body" style="padding: 0;">
                <table>
                    <thead>
                        <tr>
                            <th style="width: 80px">Product</th>
                            <th>Product Name</th>
                            <th>Quantity</th>
                            <th>Unit Price</th>
                            <th>Total Price</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        <% order.items.forEach(item => { %>
                            <tr>
                                <td>
                                    <img src="<%= item.productImage %>" alt="<%= item.productName %>" class="product-img">
                                </td>
                                <td class="product-name"><%= item.productName %></td>
                                <td><%= item.quantity %></td>
                                <td>‚Çπ<%= item.unitPrice.toFixed(2) %></td>
                                <td>‚Çπ<%= item.totalPrice.toFixed(2) %></td>
                                <td>
                                    <span class="badge badge-<%= order.status.toLowerCase().replace(' ', '-') %>">
                                        <%= order.status %>
                                    </span>
                                </td>
                            </tr>
                        <% }) %>
                    </tbody>
                </table>
                <div class="total-row">
                    <span class="total-label">Total Amount:</span>
                    <span class="total-value">‚Çπ<%= order.total.toFixed(2) %></span>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script>
        // Dropdown menu toggle
        document.querySelector('.dropdown-toggle').addEventListener('click', () => {
            const dropdownMenu = document.querySelector('.dropdown-menu');
            dropdownMenu.classList.toggle('show');
        });

        document.addEventListener('click', (event) => {
            const dropdown = document.querySelector('.dropdown');
            if (!dropdown.contains(event.target)) {
                document.querySelector('.dropdown-menu').classList.remove('show');
            }
        });

        document.querySelector('.update-btn').addEventListener('click', async () => {
            const orderId = document.querySelector('.update-btn').dataset.orderId;
            const status = document.querySelector('.select-status').value;
            try {
                const response = await fetch(`/admin/orders/${orderId}/update-status`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ status }),
                });
                const result = await response.json();
                if (result.success) {
                    Toastify({
                        text: 'Status updated successfully',
                        duration: 3000,
                        gravity: 'top',
                        position: 'right',
                        className: 'Toastify__toast--success',
                        stopOnFocus: true,
                    }).showToast();
                    setTimeout(() => location.reload(), 1000);
                } else {
                    Toastify({
                        text: `Error updating status: ${result.error}`,
                        duration: 3000,
                        gravity: 'top',
                        position: 'right',
                        className: 'Toastify__toast--error',
                        stopOnFocus: true,
                    }).showToast();
                }
            } catch (error) {
                Toastify({
                    text: `Error updating status: ${error.message}`,
                    duration: 3000,
                    gravity: 'top',
                    position: 'right',
                    className: 'Toastify__toast--error',
                    stopOnFocus: true,
                }).showToast();
            }
        });

        document.querySelectorAll('.approve-return-btn').forEach(button => {
            button.addEventListener('click', async () => {
                const orderId = button.dataset.orderId;
                const status = document.getElementById("returnStatus").value;
                
                try {
                    const response = await fetch(`/admin/orders/approve-return/${orderId}`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ status })
                    });
                    const result = await response.json();
                    if (result.success) {
                        // if (status === 'rejected') {
                        //     alert('Return rejected');
                        // }
                        Toastify({
                            text: status === 'rejected' ? 'Return rejected successfully' : 'Return approved successfully',
                            duration: 3000,
                            gravity: 'top',
                            position: 'right',
                            className: 'Toastify__toast--success',
                            stopOnFocus: true,
                        }).showToast();
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        Toastify({
                            text: `Error processing return: ${result.message}`,
                            duration: 3000,
                            gravity: 'top',
                            position: 'right',
                            className: 'Toastify__toast--error',
                            stopOnFocus: true,
                        }).showToast();
                    }
                } catch (error) {
                    Toastify({
                        text: `Error processing return: ${error.message}`,
                        duration: 3000,
                        gravity: 'top',
                        position: 'right',
                        className: 'Toastify__toast--error',
                        stopOnFocus: true,
                    }).showToast();
                }
            });
        });
    </script>
</body>
</html>