<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Customers</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/css/adminDashboard.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet"> 
    <link rel="stylesheet" href="/css/adminCustomer.css">
</head>
<body>
    <%- include('../../views/partials/admin/header') %>

    <div class="search-user-section">
        <div class="search-container">
            <i class="fas fa-search search-icon"></i>
            <input type="text" placeholder="Search..." class="search-input">
        </div>
        <div class="dropdown">
            <select class="custom-select">
                <option value="newest">Newest</option>
                <option value="oldest">Oldest</option>
                <option value="a-z">A-Z</option>
                <option value="z-a">Z-A</option>
            </select>
        </div>
    </div>

    <div class="container">
        <table>
            <thead>
                <tr>
                    <th>USER IMAGE</th>
                    <th>USERNAME</th>
                    <th>EMAIL</th>
                    <th>PHONE</th>
                    <th>ACTIONS</th>
                </tr>
            </thead>
            <tbody>
                <% if (data.length === 0) { %>
                    <tr><td colspan="5">No users found</td></tr>
                <% } else { %>
                    <% for(let i = 0; i < data.length; i++) { %>
                        <tr>
                            <td class="user-image">
                                <img src="<%= data[i].profileImage || '/images/default.jpg' %>" alt="User Image">
                            </td>
                            <td><%= data[i].firstName || 'N/A' %></td>
                            <td><%= data[i].email || 'N/A' %></td>
                            <td><%= data[i].phone || 'N/A' %></td>
                            <td>
                                <div class="action-icons">
                                    <button class="action-icon wallet-icon wallet-btn" data-user-id="<%= data[i]._id %>" title="View Wallet">
                                        <i class="fas fa-wallet"></i>
                                    </button>
                                    <% if (data[i].isBlocked) { %>
                                        <a href="/admin/unblockCustomer?id=<%= data[i]._id %>" class="action-icon unblock-icon" title="Unblock User">
                                            <i class="fas fa-unlock"></i>
                                        </a>
                                    <% } else { %>
                                        <a href="/admin/blockCustomer?id=<%= data[i]._id %>" class="action-icon block-icon" title="Block User">
                                            <i class="fas fa-ban"></i>
                                        </a>
                                    <% } %>
                                </div>
                            </td>
                        </tr>
                    <% } %>
                <% } %>
            </tbody>
        </table>
        <div id="walletModal" class="wallet-modal">
            <div class="wallet-modal-content">
                <div class="wallet-modal-header">
                    <h3 class="wallet-modal-title">
                        <i class="fas fa-wallet"></i>
                        Customer Wallet Details
                    </h3>
                    <button class="close-modal">Ã—</button>
                </div>
                <div class="wallet-modal-body">
                    <div id="walletContent">
                        <div class="loading-spinner">
                            <div class="spinner"></div>
                            <p>Loading wallet details...</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <%- include('../../views/partials/admin/footer') %>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const searchInput = document.querySelector('.search-input');
            const sortSelect = document.querySelector('.custom-select');
            const tbody = document.querySelector('table tbody');
            const walletModal = document.getElementById('walletModal');
            const walletContent = document.getElementById('walletContent');
            const closeModalButton = document.querySelector('.close-modal');

            let currentSearchTerm = '';
            let currentSortOption = 'a-z';
            let currentPage = new URLSearchParams(window.location.search).get('page') || 1;

            function debounce(func, delay) {
                let timeout;
                return (...args) => {
                    clearTimeout(timeout);
                    timeout = setTimeout(() => func(...args), delay);
                };
            }

            async function updateTable(searchTerm = '', sortOption = 'a-z', page = 1) {
                try {
                    const url = `/admin/customers?search=${encodeURIComponent(searchTerm)}&page=${page}`;
                    const response = await fetch(url, { headers: { 'Accept': 'application/json' } });
                    if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);

                    const { data, totalPages, currentPage: serverPage } = await response.json();
                    const sortedData = [...data].sort((a, b) => {
                        const nameA = (a.firstName || '').toLowerCase();
                        const nameB = (b.firstName || '').toLowerCase();
                        switch (sortOption) {
                            case 'a-z': return nameA.localeCompare(nameB);
                            case 'z-a': return nameB.localeCompare(nameA);
                            case 'newest': return new Date(b.createdAt) - new Date(a.createdAt);
                            case 'oldest': return new Date(a.createdAt) - new Date(b.createdAt);
                            default: return 0;
                        }
                    });

                    tbody.innerHTML = sortedData.length === 0
                        ? '<tr><td colspan="5">No users found</td></tr>'
                        : sortedData.map(user => `
                            <tr>
                                <td class="user-image"><img src="${user.profileImage || '/img/profile images.png'}" alt="User Image"></td>
                                <td>${user.firstName || 'N/A'}</td>
                                <td>${user.email || 'N/A'}</td>
                                <td>${user.phone || 'N/A'}</td>
                                <td>
                                    <div class="action-icons">
                                        <button class="action-icon wallet-icon wallet-btn" data-user-id="${user._id}" title="View Wallet">
                                            <i class="fas fa-wallet"></i>
                                        </button>
                                        ${user.isBlocked ? 
                                            `<a href="/admin/unblockCustomer?id=${user._id}" class="action-icon unblock-icon" title="Unblock User">
                                                <i class="fas fa-unlock"></i>
                                            </a>` : 
                                            `<a href="/admin/blockCustomer?id=${user._id}" class="action-icon block-icon" title="Block User">
                                                <i class="fas fa-ban"></i>
                                            </a>` }
                                    </div>
                                </td>
                            </tr>
                        `).join('');

                    window.history.pushState({}, '', `?search=${encodeURIComponent(searchTerm)}&page=${page}`);
                } catch (error) {
                    console.error('Error fetching table data:', error);
                    tbody.innerHTML = '<tr><td colspan="5">Error loading data</td></tr>';
                }
            }

            async function openWalletModal(userId) {
                walletModal.style.display = 'block';
                document.body.style.overflow = 'hidden';

                walletContent.innerHTML = `
                    <div class="loading-spinner">
                        <div class="spinner"></div>
                        <p>Loading wallet details...</p>
                    </div>
                `;

                try {
                    const response = await fetch(`/admin/wallet/${userId}`, { headers: { 'Accept': 'application/json' } });
                    if (!response.ok) throw new Error(`HTTP error! Status: ${response.status}`);
                    const walletData = await response.json();
                    displayWalletData(walletData);
                } catch (error) {
                    console.error('Error fetching wallet data:', error);
                    walletContent.innerHTML = `
                        <div class="no-transactions">
                            <i class="fas fa-exclamation-triangle" style="font-size: 24px; margin-bottom: 10px; color: #f87171;"></i>
                            <p>Error loading wallet data. Please try again.</p>
                        </div>
                    `;
                }
            }

            function displayWalletData(walletData) {
                const transactionsHtml = walletData.transactions?.length > 0
                    ? walletData.transactions.map(transaction => `
                        <div class="transaction-item ${transaction.type.toLowerCase()}">
                            <div class="transaction-header">
                                <span class="transaction-type">${transaction.type}</span>
                                <span class="transaction-amount">
                                    ${transaction.type === 'Credit' ? '+' : '-'}â‚¹${transaction.amount.toFixed(2)}
                                </span>
                            </div>
                            <div class="transaction-details">
                                <span>${transaction.method}</span>
                                <span>${new Date(transaction.date).toLocaleDateString()}</span>
                            </div>
                            ${transaction.description ? `<div style="font-size: 12px; color: #94a3b8; margin-top: 5px;">${transaction.description}</div>` : ''}
                        </div>
                    `).join('')
                    : '<div class="no-transactions"><i class="fas fa-inbox" style="font-size: 24px; margin-bottom: 10px;"></i><p>No transactions found</p></div>';

                walletContent.innerHTML = `
                    <div class="wallet-balance-section">
                        <div class="wallet-balance">â‚¹${(walletData.balance || 0).toFixed(2)}</div>
                        <div class="wallet-currency">Current Balance (${walletData.currency || 'INR'})</div>
                    </div>
                    <div class="transactions-section" style="max-height: 300px; overflow-y: auto;">
                        <h4><i class="fas fa-history"></i> Recent Transactions</h4>
                        ${transactionsHtml}
                    </div>
                `;
            }

            function closeWalletModal() {
                walletModal.style.display = 'none';
                document.body.style.overflow = 'auto';
            }

            const debouncedSearch = debounce(() => {
                currentSearchTerm = searchInput.value.trim();
                currentSortOption = sortSelect.value.toLowerCase();
                currentPage = 1;
                updateTable(currentSearchTerm, currentSortOption, currentPage);
            }, 300);

            searchInput.addEventListener('input', debouncedSearch);
            sortSelect.addEventListener('change', debouncedSearch);

            tbody.addEventListener('click', (event) => {
                const button = event.target.closest('.wallet-btn');
                if (button) {
                    const userId = button.getAttribute('data-user-id');
                    openWalletModal(userId);
                }
            });

            closeModalButton.addEventListener('click', closeWalletModal);
            window.onclick = (e) => { if (e.target === walletModal) closeWalletModal(); };
            document.addEventListener('keydown', (e) => { if (e.key === 'Escape') closeWalletModal(); });

            updateTable(currentSearchTerm, currentSortOption, currentPage);
        });
    </script>

</body>
</html>
